#!/usr/bin/bash

#_                   _ _ _  _ _____ _  _
#| | _______   ____ _| | | || |___  | || |
#| |/ / _ \ \ / / _` | | | || |_ / /| || |_
#|   <  __/\ V / (_| | | |__   _/ / |__   _|
#|_|\_\___| \_/ \__,_|_|_|  |_|/_/     |_|

configure(){
  plain ""
  plain "#########################################"
  plain "Set module SIG level"
  read -rp "`echo $' > 1.SHA1\n > 2.SHA224\n > 3.SHA256\n > 4.SHA384\n > 5.SHA512\n > Default (SHA512)\nchoice[1-5]: '`" _sig;
  if [[ $_sig = "1" ]]; then
    msg2 "Set SIG level to SHA1"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA224
    scripts/config --disable CONFIG_MODULE_SIG_SHA256
    scripts/config --disable CONFIG_MODULE_SIG_SHA384
    scripts/config --disable CONFIG_MODULE_SIG_SHA512
    scripts/config --enable CONFIG_MODULE_SIG_SHA1
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha1"
  elif [[ $_sig = "2" ]]; then
    msg2 "Set SIG level to SHA224"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA1
    scripts/config --disable CONFIG_MODULE_SIG_SHA256
    scripts/config --disable CONFIG_MODULE_SIG_SHA384
    scripts/config --disable CONFIG_MODULE_SIG_SHA512
    scripts/config --enable CONFIG_MODULE_SIG_SHA224
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha224"
  elif [[ $_sig = "3" ]]; then
    msg2 "Set SIG level to SHA256"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA1
    scripts/config --disable CONFIG_MODULE_SIG_SHA224
    scripts/config --disable CONFIG_MODULE_SIG_SHA384
    scripts/config --disable CONFIG_MODULE_SIG_SHA512
    scripts/config --enable CONFIG_MODULE_SIG_SHA256
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha256"
  elif [[ $_sig = "4" ]]; then
    msg2 "Set SIG level to SHA384"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA1
    scripts/config --disable CONFIG_MODULE_SIG_SHA224
    scripts/config --disable CONFIG_MODULE_SIG_SHA256
    scripts/config --disable CONFIG_MODULE_SIG_SHA512
    scripts/config --enable CONFIG_MODULE_SIG_SHA384
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha384"
  elif [[ $_sig = "5" ]]; then
    msg2 "Set SIG level to SHA512"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA1
    scripts/config --disable CONFIG_MODULE_SIG_SHA224
    scripts/config --disable CONFIG_MODULE_SIG_SHA256
    scripts/config --disable CONFIG_MODULE_SIG_SHA384
    scripts/config --enable CONFIG_MODULE_SIG_SHA512
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha512"
  else
    msg2 "Set SIG level to SHA512"
    scripts/config --undefine MODULE_SIG_FORCE
    scripts/config --disable MODULE_SIG_FORCE
    scripts/config --enable CONFIG_MODULE_SIG
    scripts/config --enable CONFIG_MODULE_SIG_ALL
    scripts/config --disable CONFIG_MODULE_SIG_SHA1
    scripts/config --disable CONFIG_MODULE_SIG_SHA224
    scripts/config --disable CONFIG_MODULE_SIG_SHA256
    scripts/config --disable CONFIG_MODULE_SIG_SHA384
    scripts/config --enable CONFIG_MODULE_SIG_SHA512
    scripts/config  --set-val CONFIG_MODULE_SIG_HASH "sha512"
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set module compression"
  read -rp "`echo $' > 1.GZIP\n > 2.XZ\n > 3.ZSTD\n > Default (XZ)\nchoice[1-3]: '`" _compression;
  if [[ $_compression = "1" ]]; then
    msg2 "Set module compression to GZIP"
    scripts/config --enable CONFIG_MODULE_COMPRESS
    scripts/config --disable CONFIG_MODULE_COMPRESS_XZ
    scripts/config --disable CONFIG_MODULE_COMPRESS_ZSTD
    scripts/config --enable CONFIG_MODULE_COMPRESS_GZIP
  elif [[ $_compression = "2" ]]; then
    msg2 "Set module compression to XZ"
    scripts/config --enable CONFIG_MODULE_COMPRESS
    scripts/config --disable CONFIG_MODULE_COMPRESS_ZSTD
    scripts/config --disable CONFIG_MODULE_COMPRESS_GZIP
    scripts/config --enable CONFIG_MODULE_COMPRESS_XZ
  elif [[ $_compression = "3" ]]; then
    msg2 "Set module compression to ZSTD"
    scripts/config --enable CONFIG_MODULE_COMPRESS
    scripts/config --disable CONFIG_MODULE_COMPRESS_GZIP
    scripts/config --disable CONFIG_MODULE_COMPRESS_XZ
    scripts/config --enable CONFIG_MODULE_COMPRESS_ZSTD
  else
    msg2 "Set module compression to XZ"
    scripts/config --enable CONFIG_MODULE_COMPRESS
    scripts/config --disable CONFIG_MODULE_COMPRESS_ZSTD
    scripts/config --disable CONFIG_MODULE_COMPRESS_GZIP
    scripts/config --enable CONFIG_MODULE_COMPRESS_XZ
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable CONFIG_STACK_VALIDATION"
  plain "Gives better stack traces. Also is enabled in all official kernel packages by Archlinux team"
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _config_stack;
  if [[ $_config_stack = "1" ]]; then
    msg2 "Enable CONFIG_STACK_VALIDATION"
    scripts/config --enable CONFIG_STACK_VALIDATION
  elif [[ $_config_stack = "2" ]]; then
    msg2 "Disable CONFIG_STACK_VALIDATION"
    scripts/config --disable CONFIG_STACK_VALIDATION
  else
    msg2 "Enable CONFIG_STACK_VALIDATION"
    scripts/config --enable CONFIG_STACK_VALIDATION
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable IKCONFIG"
  plain "Enable access to the kernel configuration file through /proc/config.gz"
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _ikconfig;
  if [[ $_ikconfig = "1" ]]; then
    msg2 "Enable IKCONFIG"
    scripts/config --enable CONFIG_IKCONFIG
    scripts/config --enable CONFIG_IKCONFIG_PROC
  elif [[ $_ikconfig = "2" ]]; then
    msg2 "Disable IKCONFIG"
    scripts/config --disable CONFIG_IKCONFIG
    scripts/config --disable CONFIG_IKCONFIG_PROC
  else
    msg2 "Enable IKCONFIG"
    scripts/config --enable CONFIG_IKCONFIG
    scripts/config --enable CONFIG_IKCONFIG_PROC
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable NUMA"
  plain "Better option is to disable NUMA since most users do not have multiple processors... Breaks CUDA/NvEnc..."
  read -rp "`echo $' > 1.Enable\n > 2.Disable (possibly increase performance)\n > Default (Disable)\nchoice[1-2]: '`" _numa;
  if [[ $_numa = "1" ]]; then
    msg2 "Enable NUMA"
    scripts/config --enable CONFIG_NUMA
    scripts/config --enable CONFIG_NUMA
    scripts/config --enable CONFIG_AMD_NUMA
    scripts/config --enable CONFIG_X86_64_ACPI_NUMA
    scripts/config --enable CONFIG_NODES_SPAN_OTHER_NODES
    scripts/config --enable CONFIG_NUMA_EMU
    scripts/config --enable CONFIG_NEED_MULTIPLE_NODES
    scripts/config --enable CONFIG_USE_PERCPU_NUMA_NODE_ID
    scripts/config --enable CONFIG_ACPI_NUMA
    scripts/config --enable CONFIG_ARCH_SUPPORTS_NUMA_BALANCING
    scripts/config --set-val CONFIG_NODES_SHIFT 5
    scripts/config --enable CONFIG_NEED_MULTIPLE_NODES
  elif [[ $_numa = "2" ]]; then
    msg2 "Disable NUMA"
    scripts/config --disable CONFIG_NUMA
    scripts/config --disable CONFIG_AMD_NUMA
    scripts/config --disable CONFIG_X86_64_ACPI_NUMA
    scripts/config --disable CONFIG_NODES_SPAN_OTHER_NODES
    scripts/config --disable CONFIG_NUMA_EMU
    scripts/config --disable CONFIG_NEED_MULTIPLE_NODES
    scripts/config --disable CONFIG_USE_PERCPU_NUMA_NODE_ID
    scripts/config --disable CONFIG_ACPI_NUMA
    scripts/config --disable CONFIG_ARCH_SUPPORTS_NUMA_BALANCING
    scripts/config --disable CONFIG_NODES_SHIFT
    scripts/config --undefine CONFIG_NODES_SHIFT
    scripts/config --disable CONFIG_NEED_MULTIPLE_NODES
  else
    msg2 "Disable NUMA"
    scripts/config --disable CONFIG_NUMA
    scripts/config --disable CONFIG_AMD_NUMA
    scripts/config --disable CONFIG_X86_64_ACPI_NUMA
    scripts/config --disable CONFIG_NODES_SPAN_OTHER_NODES
    scripts/config --disable CONFIG_NUMA_EMU
    scripts/config --disable CONFIG_NEED_MULTIPLE_NODES
    scripts/config --disable CONFIG_USE_PERCPU_NUMA_NODE_ID
    scripts/config --disable CONFIG_ACPI_NUMA
    scripts/config --disable CONFIG_ARCH_SUPPORTS_NUMA_BALANCING
    scripts/config --disable CONFIG_NODES_SHIFT
    scripts/config --undefine CONFIG_NODES_SHIFT
    scripts/config --disable CONFIG_NEED_MULTIPLE_NODES
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable FUNCTION_TRACER/GRAPH_TRACER"
  plain "Limits debugging and analyzing of the kernel"
  read -rp "`echo $' > 1.Enable\n > 2.dDsable (possibly increase performance)\n > Default (Disable)\nchoice[1-2]: '`" _tracer;
  if [[ $_tracer = "1" ]]; then
    msg2 "Enable FUNCTION_TRACER/GRAPH_TRACER"
    scripts/config --enable CONFIG_FUNCTION_TRACER
    scripts/config --enable CONFIG_STACK_TRACER
  elif [[ $_tracer = "2" ]]; then
    msg2 "Disable FUNCTION_TRACER/GRAPH_TRACER"
    scripts/config --disable CONFIG_FUNCTION_TRACER
    scripts/config --disable CONFIG_STACK_TRACER
  else
    msg2 "Disable FUNCTION_TRACER/GRAPH_TRACER"
    scripts/config --disable CONFIG_FUNCTION_TRACER
    scripts/config --disable CONFIG_STACK_TRACER
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/Disable CONFIG_USER_NS_UNPRIVILEGED"
  plain ""
  plain "Allow unprivileged users to create namespaces"
  plain "When disabled, unprivileged users will not be able to create"
  plain "new namespaces. Allowing users to create their own namespaces"
  plain "has been part of several recent local privilege escalation"
  plain "exploits, so if you need user namespaces but are"
  plain "paranoid^Wsecurity-conscious you want to disable this."
  plain "This setting can be overridden at runtime via the"
  plain "kernel.unprivileged_userns_clone sysctl."
  plain ""
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Disable)\nchoice[1-2]: '`" _ns;
  if [[ $_ns = "1" ]]; then
    msg2 "Enable CONFIG_USER_NS_UNPRIVILEGED"
    scripts/config --disable CONFIG_USER_NS_UNPRIVILEGED
  elif [[ $_ns = "2" ]]; then
    msg2 "Disable CONFIG_USER_NS_UNPRIVILEGED"
    scripts/config --disable CONFIG_USER_NS_UNPRIVILEGED
  else
    msg2 "Disable CONFIG_USER_NS_UNPRIVILEGED"
    scripts/config --disable CONFIG_USER_NS_UNPRIVILEGED
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set CPU Frequency scaling"
  plain ""
  plain "performance : When attached to a policy object, this governor causes the highest frequency,"
  plain "within the scaling_max_freq policy limit, to be requested for that policy. The request is"
  plain "made once at that time the governor for the policy is set to performance and whenever"
  plain "the scaling_max_freq or scaling_min_freq policy limits change after that."
  plain ""
  plain "powersave : When attached to a policy object, this governor causes the lowest frequency, within"
  plain "the scaling_min_freq policy limit, to be requested for that policy.The request is made once at "
  plain "that time the governor for the policy is set to powersave and whenever"
  plain "the scaling_max_freq or scaling_min_freq policy limits change after that."
  plain ""
  plain "userspace : This governor does not do anything by itself. Instead, it allows user space to set the"
  plain "CPU frequency for the policy it is attached to by writing to the scaling_setspeed attribute of that policy."
  plain ""
  plain "schedutil : This governor uses CPU utilization data available from the CPU scheduler. It generally is regarded"
  plain "as a part of th CPU scheduler, so it can access the scheduler’s internal data structures directly."
  plain ""
  plain "ondemand : This governor uses CPU load as a CPU frequency selection metric. In order to estimate the current CPU"
  plain "load, it measures the time elapsed between consecutive invocations of its worker routine and computes"
  plain "the fraction of that time in which the given CPU was not idle. The ratio of the non-idle (active) time to the total CPU time is"
  plain "taken as an estimate of the load."
  plain ""
  plain "conservative : This governor uses CPU load as a CPU frequency selection metric. It estimates the CPU load in the same way as the"
  plain "ondemand governor described above, but the CPU frequency selection algorithm implemented by it is different."
  plain ""
  plain "Full documentation at : https://www.kernel.org/doc/html/v4.14/admin-guide/pm/cpufreq.html"
  plain ""
  read -rp "`echo $' > 1.Powersave\n > 2.Userspace\n > 3.Ondemand\n > 4.Conservative\n > 5.Schedutil\n > 6.Performance\n > 7.Default(zen-kernel)\n > Default (Performance)\nchoice[1-7]: '`" _cpu_freq;
  if [[ $_cpu_freq = "1" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for powersave"
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "2" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for userspace"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "3" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for ondemand"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --enable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "4" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for conservative"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "5" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for schedutil"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --enable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "6" ]]; then
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for performance"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  elif [[ $_cpu_freq = "7" ]]; then
    msg2 "Set CPU Frequency scaling default from zen kernel"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --enable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --enable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  else
    msg2 "Set CPU Frequency scaling CONFIG_CPU_FREQ_DEFAULT_GOV/CONFIG_CPU_FREQ_GOV for performance"
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
    scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
    scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL
    scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
    scripts/config --enable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set CPU DEVFREQ Governor"
  plain ""
  plain "Simple Ondemand : Chooses frequency based on the recent load on the device. Works similar as ONDEMAND"
  plain "governor of CPUFREQ does. A device with Simple-Ondemand should be able to provide busy/total counter values"
  plain "that imply the usage rate. A device may provide tuned values to the governor with data field at devfreq_add_device()."
  plain ""
  plain "Performance : Sets the frequency at the maximum available frequency. This governor always returns UINT_MAX as"
  plain "frequency so that the DEVFREQ framework returns the highest frequency available at any time."
  plain ""
  plain "Powersave : Sets the frequency at the minimum available frequency. This governor always returns 0 as frequency so that"
  plain "the DEVFREQ framework returns the lowest frequency available at any time."
  plain ""
  plain "Userspace : Sets the frequency at the user specified one. This governor returns the user configured frequency if there has"
  plain "been an input to /sys/devices/.../power/devfreq_set_freq. Otherwise, the governor does not change the frequency given"
  plain "at the initialization."
  plain ""
  plain "Passive : Sets the frequency based on the frequency of its parent devfreq device. This governor does not change the"
  plain "frequency by itself through sysfs entries. The passive governor recommends that devfreq device uses the OPP table to"
  plain "get the frequency/voltage."
  plain ""
  read -rp "`echo $' > 1.Simple Ondemand\n > 2.Powersave\n > 3.Userspace\n > 4.Passive\n > 5.Performance\n > 6.Default(zen kernel : all)\n > Default (Performance)\nchoice[1-6]: '`" _devfreq
  if [[ $_devfreq = "1" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for simple ondemand"
    scripts/config --enable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --disable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PERFORMANCE
  elif [[ $_devfreq = "2" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for powersave"
    scripts/config --disable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --undefine CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --enable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PERFORMANCE
  elif [[ $_devfreq = "3" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for userspace"
    scripts/config --disable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --undefine CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --disable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --enable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PERFORMANCE
  elif [[ $_devfreq = "4" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for passive"
    scripts/config --disable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --undefine CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --disable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --enable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PERFORMANCE
  elif [[ $_devfreq = "5" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for performance"
    scripts/config --disable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --undefine CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --disable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --enable CONFIG_DEVFREQ_GOV_PERFORMANCE
  elif [[ $_devfreq = "6" ]]; then
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV default from zen kernel"
    scripts/config --enable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --enable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --enable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --enable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --enable CONFIG_DEVFREQ_GOV_PERFORMANCE
  else
    msg2 "Set CPU DEVFREQ GOV CONFIG_DEVFREQ_GOV for performance"
    scripts/config --disable CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --undefine CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
    scripts/config --disable CONFIG_DEVFREQ_GOV_POWERSAVE
    scripts/config --disable CONFIG_DEVFREQ_GOV_USERSPACE
    scripts/config --disable CONFIG_DEVFREQ_GOV_PASSIVE
    scripts/config --enable CONFIG_DEVFREQ_GOV_PERFORMANCE
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set PCIEASPM driver"
  plain ""
  plain "BIOS default : Use the BIOS defaults for PCI Express ASPM."
  plain ""
  plain "Powersave : Enable PCI Express ASPM L0s and L1 where possible, even if the BIOS did not."
  plain ""
  plain "Power Supersave : Same as PCIEASPM_POWERSAVE, except it also enables L1 substates where possible."
  plain "This would result in higher power savings while staying in L1 where the components support it."
  plain ""
  plain "Performance : Disable PCI Express ASPM L0s and L1, even if the BIOS enabled them."
  plain ""
  read -rp "`echo $' > 1.Default\n > 2.Powersave\n > 3.Supersave\n > 4.Performance\n > 5.Default(zen kernel : Default)\n > Default (Performance)\nchoice[1-5]: '`" _pcieaspm
  if [[ $_pcieaspm = "1" ]] || [[ $_pcieaspm = "5" ]]; then
    msg2 "Set PCIEASPM DRIVER to default"
    scripts/config --enable CONFIG_PCIEASPM
    scripts/config --enable CONFIG_PCIEASPM_DEFAULT
  elif [[ $_pcieaspm = "2" ]]; then
    msg2 "Set PCIEASPM DRIVER to powersave"
    scripts/config --enable CONFIG_PCIEASPM
    scripts/config --enable CONFIG_PCIEASPM_POWERSAVE
  elif [[ $_pcieaspm = "3" ]]; then
    msg2 "Set PCIEASPM DRIVER to supersave"
    scripts/config --enable CONFIG_PCIEASPM
    scripts/config --enable CONFIG_PCIEASPM_SUPERSAVE
  elif [[ $_pcieaspm = "4" ]]; then
    msg2 "Set PCIEASPM DRIVER to performance"
    scripts/config --enable CONFIG_PCIEASPM
    scripts/config --enable CONFIG_PCIEASPM_PERFORMANCE
  else
    msg2 "Set PCIEASPM DRIVER to performance"
    scripts/config --enable CONFIG_PCIEASPM
    scripts/config --enable CONFIG_PCIEASPM_PERFORMANCE
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set PCIE_BUS driver"
  plain ""
  plain "Tune Off : Use the BIOS defaults; don't touch MPS at all.  This is the same as booting with 'pci=pcie_bus_tune_off'."
  plain ""
  plain "Default : Default choice; ensure that the MPS matches upstream bridge."
  plain ""
  plain "Safe : Use largest MPS that boot-time devices support. If you have a closed system with no possibility of adding new devices,"
  plain "this will use the largest MPS that's supported by all devices. This is the same as booting with 'pci=pcie_bus_safe'."
  plain ""
  plain "Performance : Use MPS and MRRS for best performance.  Ensure that a given device's MPS is no larger than its parent MPS, which allows us to"
  plain "keep all switches/bridges to the max MPS supported by their parent.  This is the same as booting with 'pci=pcie_bus_perf'."
  plain ""
  plain "Peer2peer : Set MPS = 128 for all devices.  MPS configuration effected by the other options could cause the MPS on one root port to"
  plain "be different than that of the MPS on another, which may cause hot-added devices or peer-to-peer DMA to fail.  Set MPS to the"
  plain "smallest possible value (128B) system-wide to avoid these issues. This is the same as booting with 'pci=pcie_bus_peer2peer'."
  plain ""
  read -rp "`echo $' > 1.Tune off\n > 2.Default\n > 3.Safe\n > 4.Performance\n > 5.Peer2peer\n > 6.Default(zen kernel : Default)\n > Default (Performance)\nchoice[1-5]: '`" _pcie_bus
  if [[ $_pcie_bus = "1" ]]; then
    msg2 "Set CONFIG_PCIE_BUS for tune off"
    scripts/config --enable CONFIG_PCIE_BUS_TUNE_OFF
  elif [[ $_pcie_bus = "2" ]] || [[ $_pcie_bus = "6" ]]; then
    msg2 "Set CONFIG_PCIE_BUS for default"
    scripts/config --enable CONFIG_PCIE_BUS_DEAULT
  elif [[ $_pcie_bus = "3" ]]; then
    msg2 "Set CONFIG_PCIE_BUS for safe"
    scripts/config --enable CONFIG_PCIE_BUS_SAFE
  elif [[ $_pcie_bus = "4" ]]; then
    msg2 "Set CONFIG_PCIE_BUS for performance"
    scripts/config --enable CONFIG_PCIE_BUS_PERFORMANCE
  elif [[ $_pcie_bus = "5" ]]; then
    msg2 "Set CONFIG_PCIE_BUS for peerpeer"
    scripts/config --enable CONFIG_PCIE_BUS_PEER2PEER
  else
    msg2 "Set CONFIG_PCIE_BUS for performance"
    scripts/config --enable CONFIG_PCIE_BUS_PERFORMANCE
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set Optimization"
  plain ""
  plain "Optimize for performance (-O2) : This is the default optimization level for the kernel, building with the "-O2""
  plain "compiler flag for best performance and most helpful compile-time warnings."
  plain ""
  plain "Optimize more for performance (-O3) : Choosing this option will pass "-O3" to your compiler to optimize the kernel yet more for performance."
  plain ""
  plain "Optimize for size (-Os) : Choosing this option will pass "-Os" to your compiler resulting in a smaller kernel."
  plain ""
  read -rp "`echo $' > 1.Optimize for performance(-O2)\n > 2.Optimize for performance(-O3)\n > 3.Optimize for size(-Os)\n > 4.Default (zen-kernel : Optimize for performance (-O3))\n > Default (Optimize for performance (-O3))\nchoice[1-4]: '`" _optimize
  if [[ "$_optimize" = "1" ]]; then
    msg2 "Enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE"
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_SIZE
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
    scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
  elif [[ "$_optimize" = "2" ]] || [[ "$_optimize" = "4" ]]; then
    msg2 "Enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3"
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_SIZE
    scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
  elif [[ "$_optimize" = "3" ]]; then
    msg2 "Enable CONFIG_CC_OPTIMIZE_FOR_SIZE..."
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
    scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_SIZE
  else
    msg2 "Enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3"
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
    scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_SIZE
    scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Set timer frequency"
  plain ""
  plain "100 HZ : 100 Hz is a typical choice for servers, SMP and NUMA systems"
  plain "with lots of processors that may show reduced performance if"
  plain "too many timer interrupts are occurring."
  plain ""
  plain "250 HZ : 250 Hz is a good compromise choice allowing server performance"
  plain "while also showing good interactive responsiveness even"
  plain "on SMP and NUMA systems. If you are going to be using NTSC video"
  plain "or multimedia, selected 300Hz instead."
  plain ""
  plain "350 HZ : 300 Hz is a good compromise choice allowing server performance"
  plain "while also showing good interactive responsiveness even"
  plain "on SMP and NUMA systems and exactly dividing by both PAL and"
  plain "NTSC frame rates for video and multimedia work."
  plain ""
  plain "750 HZ : 750 Hz is a balanced timer frequency. Provides fast interactivity"
  plain "on desktops with good smoothness without increasing CPU power"
  plain "consumption and sacrificing the battery life on laptops."
  plain ""
  plain "1000 HZ : 1000 Hz is the preferred choice for desktop systems and other"
  plain "systems requiring fast interactive responses to events."
  plain ""
  read -rp "`echo $' > 1.100\n > 2.250\n > 3.300\n > 4.750\n > 5.1000\n > 6.Default(zen kernel : 1000)\n > Default (1000)\nchoice[1-6]: '`" _timer_freq
  if [[ "$_timer_freq" = "1" ]]; then
    msg2 "Set timer frequency to 100HZ"
    scripts/config --enable CONFIG_HZ_100
    scripts/config --set-val CONFIG_HZ 100
  elif [[ "$_timer_freq" = "2" ]]; then
    msg2 "Set timer frequency to 250HZ"
    scripts/config --enable CONFIG_HZ_250
    scripts/config --set-val CONFIG_HZ 250
  elif [[ "$_timer_freq" = "3" ]]; then
    msg2 "Set timer frequency to 300HZ"
    scripts/config --enable CONFIG_HZ_300
    scripts/config --set-val CONFIG_HZ 300
  elif [[ "$_timer_freq" = "4" ]]; then
    msg2 "Set timer frequency to 750HZ"
    scripts/config --enable CONFIG_HZ_750
    scripts/config --set-val CONFIG_HZ 750
  elif [[ "$_timer_freq" = "5" ]] || [[ "$_timer_freq" = "6" ]]; then
    msg2 "Set timer frequency to 1000HZ"
    scripts/config --enable CONFIG_HZ_1000
    scripts/config --set-val CONFIG_HZ 1000
  else
    msg2 "Set timer frequency to 1000HZ"
    scripts/config --enable CONFIG_HZ_1000
    scripts/config --set-val CONFIG_HZ 1000
  fi

  sleep 2

  plain ""
  plain "#########################################"
  plain "Set Preemption Model"
  plain ""
  plain "PREEMPT_NONE (No Forced Preemption (Server)) :"
  plain ""
  plain "This is the traditional Linux preemption model, geared towards"
  plain "throughput. It will still provide good latencies most of the"
  plain "time, but there are no guarantees and occasional longer delays"
  plain "are possible."
  plain "Select this option if you are building a kernel for a server or"
  plain "scientific/computation system, or if you want to maximize the"
  plain "raw processing power of the kernel, irrespective of scheduling"
  plain "latencies."
  plain ""
  plain "PREEMPT_VOLUNTARY (Voluntary Kernel Preemption (Desktop)) :"
  plain ""
  plain "This option reduces the latency of the kernel by adding more"
  plain "(explicit preemption points) to the kernel code. These new"
  plain "preemption points have been selected to reduce the maximum"
  plain "latency of rescheduling, providing faster application reactions,"
  plain "at the cost of slightly lower throughput."
  plain "This allows reaction to interactive events by allowing a"
  plain "low priority process to voluntarily preempt itself even if it"
  plain "is in kernel mode executing a system call. This allows"
  plain "applications to run more 'smoothly' even when the system is"
  plain "under load."
  plain "Select this if you are building a kernel for a desktop system."
  plain ""
  plain "PREEMPT (Preemptible Kernel (Low-Latency Desktop)) :"
  plain ""
  plain "This option reduces the latency of the kernel by making"
  plain "all kernel code (that is not executing in a critical section)"
  plain "preemptible.  This allows reaction to interactive events by"
  plain "permitting a low priority process to be preempted involuntarily"
  plain "even if it is in kernel mode executing a system call and would"
  plain "otherwise not be about to reach a natural preemption point."
  plain "This allows applications to run more 'smoothly' even when the"
  plain "system is under load, at the cost of slightly lower throughput"
  plain "and a slight runtime overhead to kernel code."
  plain "Select this if you are building a kernel for a desktop or"
  plain "embedded system with latency requirements in the milliseconds"
  plain "range."
  plain ""
  read -rp "`echo $' > 1.PREEMPT_NONE\n > 2.PREEMPT_VOLUNTARY\n > 3.PREEMPT\n > Default (PREEMPT)\nchoice[1-3]: '`" _preempt
  if [[ "$_preempt" = "1" ]]; then
    msg2 "Enable PREEMPT_NONE"
    scripts/config --enable CONFIG_PREEMPT_NONE
    scripts/config --disable CONFIG_PREEMPT_VOLUNTARY
    scripts/config --disable CONFIG_PREEMPT
    scripts/config --enable CONFIG_PREEMPT_COUNT
    scripts/config --enable CONFIG_PREEMPTION
  elif [[ "$_preempt" = "2" ]]; then
    msg2 "Enable PREEMPT_VOLUNTARY"
    scripts/config --disable CONFIG_PREEMPT_NONE
    scripts/config --enable CONFIG_PREEMPT_VOLUNTARY
    scripts/config --disable CONFIG_PREEMPT
    scripts/config --enable CONFIG_PREEMPT_COUNT
    scripts/config --enable CONFIG_PREEMPTION
  elif [[ "$_preempt" = "3" ]]; then
    msg2 "Enable PREEMPT"
    scripts/config --disable CONFIG_PREEMPT_NONE
    scripts/config --disable CONFIG_PREEMPT_VOLUNTARY
    scripts/config --enable CONFIG_PREEMPT
    scripts/config --enable CONFIG_PREEMPT_COUNT
    scripts/config --enable CONFIG_PREEMPTION
  else
    msg2 "Enable PREEMPT"
    scripts/config --disable CONFIG_PREEMPT_NONE
    scripts/config --disable CONFIG_PREEMPT_VOLUNTARY
    scripts/config --enable CONFIG_PREEMPT
    scripts/config --enable CONFIG_PREEMPT_COUNT
    scripts/config --enable CONFIG_PREEMPTION
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable CONFIG_IRQ_FORCE_THREADING"
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _irq
  if [[ "$_irq" = "1" ]]; then
    msg2 "Enable CONFIG_IRQ_FORCE_THREADING"
    scripts/config --enable CONFIG_IRQ_FORCE_THREADING
  elif [[ "$_irq" = "2" ]]; then
    msg2 "Disable CONFIG_IRQ_FORCE_THREADING"
    scripts/config --disable CONFIG_IRQ_FORCE_THREADING
  else
    msg2 "Enable CONFIG_IRQ_FORCE_THREADING"
    scripts/config --enable CONFIG_IRQ_FORCE_THREADING
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Use CattaRappa mode (Tickless/Dynticks) ?"
  plain "Can give higher performances in many cases but lower consistency on some hardware."
  plain "Just tickless idle can perform better with some platforms (mostly AMD) or CPU schedulers (mostly MuQSS)."
  plain ""
  read -rp "`echo $' > 1.Periodic ticks\n > 2.Full tickless\n > 3.Tickless idle\n > Default (Full tickless)\nchoice[1-3]: '`" _tick
  if [[ "$_tick" = "1" ]]; then
    msg2 "Set to periodic ticks"
    scripts/config --enable CONFIG_HZ_PERIODIC
    scripts/config --disable CONFIG_NO_HZ_IDLE
    scripts/config --disable CONFIG_NO_HZ_FULL
    scripts/config --disable CONFIG_NO_HZ
    scripts/config --disable CONFIG_NO_HZ_COMMON
  elif [[ "$_tick" = "2" ]]; then
    msg2 "Set to full tickless"
    scripts/config --disable CONFIG_HZ_PERIODIC
    scripts/config --disable CONFIG_NO_HZ_IDLE
    scripts/config --enable CONFIG_NO_HZ_FULL
    scripts/config --enable CONFIG_NO_HZ
    scripts/config --enable CONFIG_NO_HZ_COMMON
    #scripts/config --enable CONFIG_CONTEXT_TRACKING
    #scripts/config --disable CONFIG_CONTEXT_TRACKING_FORCE
  elif [[ "$_tick" = "3" ]]; then
    msg2 "Set to tickless idle"
    scripts/config --disable CONFIG_HZ_PERIODIC
    scripts/config --enable CONFIG_NO_HZ_IDLE
    scripts/config --disable CONFIG_NO_HZ_FULL
    scripts/config --enable CONFIG_NO_HZ
    scripts/config --enable CONFIG_NO_HZ_COMMON
  else
    msg2 "Set to full tickless"
    scripts/config --disable CONFIG_HZ_PERIODIC
    scripts/config --disable CONFIG_NO_HZ_IDLE
    scripts/config --enable CONFIG_NO_HZ_FULL
    scripts/config --enable CONFIG_NO_HZ
    scripts/config --enable CONFIG_NO_HZ_COMMON
    #scripts/config --enable CONFIG_CONTEXT_TRACKING
    #scripts/config --disable CONFIG_CONTEXT_TRACKING_FORCE
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable Device Tree and Open Firmware support"
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _of
  if [[ "$_of" = "1" ]]; then
    msg2 "Enable Device Tree and Open Firmware support"
    scripts/config --enable CONFIG_OF
  elif [[ "$_of" = "1" ]]; then
    msg2 "Disable Device Tree and Open Firmware support"
    scripts/config --disable CONFIG_OF
  else
    msg2 "Enable Device Tree and Open Firmware support"
    scripts/config --enable CONFIG_OF
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable tristate V4L2 loopback device"
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _loopback
  if [[ "$_loopback" = "1" ]]; then
    msg2 "Enable tristate V4L2 loopback device"
    scripts/config --module CONFIG_V4L2_LOOPBACK
  elif [[ "$_loopback" = "2" ]]; then
    msg2 "Disable tristate V4L2 loopback device"
    scripts/config --disable CONFIG_V4L2_LOOPBACK
  else
    msg2 "Enable tristate V4L2 loopback device"
    scripts/config --module CONFIG_V4L2_LOOPBACK
  fi

  sleep 2s

  # uncomment spadfs because of build fail
  #plain ""
  #plain "#########################################"
  #plain "Enable/disable tristate SPADFS file system support"
  #read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _spadfs
  #if [[ "$_spadfs" = "1" ]]; then
  #  msg2 "Enable tristate SPADFS file system support"
  #  scripts/config --module CONFIG_SPADFS_FS
  #elif [[ "$_spadfs" = "2" ]]; then
  #  msg2 "Disable tristate SPADFS file system support"
  #  scripts/config --disable CONFIG_SPADFS_FS
  #else
  #  msg2 "Enable tristate V4L2 SPADFS file system support"
  #  scripts/config --module CONFIG_SPADFS_FS
  #fi

  #sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable NTFS/NTFS3"
  plain ""
  plain "NTFS :"
  plain "Linux-NTFS comes with a number of user-space programs known as ntfsprogs."
  plain "These include mkntfs, a full-featured ntfs filesystem format utility,"
  plain "ntfsundelete used for recovering files that were unintentionally deleted"
  plain "from an NTFS volume and ntfsresize which is used to resize an NTFS partition."
  plain "See the web site for more information."
  plain "To mount an NTFS 1.2/3.x (Windows NT4/2000/XP/2003) volume, use the file"
  plain "system type 'ntfs'.  The driver currently supports read-only mode (with no"
  plain "fault-tolerance, encryption or journalling) and very limited, but safe, write"
  plain "support."
  plain "For fault tolerance and raid support (i.e. volume and stripe sets), you can"
  plain "use the kernel's Software RAID / MD driver.  See section Using Software RAID"
  plain "with NTFS for details."
  plain ""
  plain "NTFS3 :"
  plain "NTFS3 is fully functional NTFS Read-Write driver. The driver works with"
  plain "NTFS versions up to 3.1, normal/compressed/sparse files"
  plain "and journal replaying. File system type to use on mount is 'ntfs3'."
  plain "- This driver implements NTFS read/write support for normal, sparse and compressed files."
  plain "- Supports native journal replaying;"
  plain "- Supports extended attributes"
  plain "Predefined extended attributes:"
  plain "- 'system.ntfs_security' gets/sets security descriptor (SECURITY_DESCRIPTOR_RELATIVE)"
  plain "- 'system.ntfs_attrib' gets/sets ntfs file/dir attributes."
  plain "Note: applied to empty files, this allows to switch type between sparse(0x200), compressed(0x800) and normal;"
  plain "- Supports NFS export of mounted NTFS volumes."
  plain ""
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _ntfs
  if [[ "$_ntfs" = "1" ]]; then
    msg2 "Enable ntfs"
    scripts/config --module CONFIG_NTFS_FS
    scripts/config --enable CONFIG_NTFS_RW
    msg2 "Enable ntfs3"
    scripts/config --module CONFIG_NTFS3_FS
    scripts/config --enable CONFIG_NTFS3_64BIT_CLUSTER
    scripts/config --enable CONFIG_NTFS3_LZX_XPRESS
    scripts/config --enable CONFIG_NTFS3_FS_POSIX_ACL
  elif [[ "$_ntfs" = "2" ]]; then
    msg2 "Disable ntfs"
    scripts/config --disable CONFIG_NTFS_FS
    scripts/config --disable CONFIG_NTFS_RW
    msg2 "Disable ntfs3"
    scripts/config --disable CONFIG_NTFS3_FS
    scripts/config --disable CONFIG_NTFS3_64BIT_CLUSTER
    scripts/config --disable CONFIG_NTFS3_LZX_XPRESS
    scripts/config --disable CONFIG_NTFS3_FS_POSIX_ACL
  else
    msg2 "Enable ntfs"
    scripts/config --module CONFIG_NTFS_FS
    scripts/config --enable CONFIG_NTFS_RW
    msg2 "Enable ntfs3"
    scripts/config --module CONFIG_NTFS3_FS
    scripts/config --enable CONFIG_NTFS3_64BIT_CLUSTER
    scripts/config --enable CONFIG_NTFS3_LZX_XPRESS
    scripts/config --enable CONFIG_NTFS3_FS_POSIX_ACL
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable Virtual (SCSI) Host Bus Adapter (VHBA)"
  plain ""
  plain "This is the in-kernel part of CDEmu, a CD/DVD-ROM device emulator."
  plain "This driver can also be built as a module. If so, the module will be called vhba."
  plain ""
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _vhba
  if [[ "$_vhba" = "1" ]]; then
    msg2 "Enable CONFIG_VHBA"
    scripts/config --module CONFIG_VHBA
  elif [[ "$_vhba" = "2" ]]; then
    msg2 "Disable CONFIG_VHBA"
    scripts/config --disable CONFIG_VHBA
  else
    msg2 "Enable CONFIG_VHBA"
    scripts/config --module CONFIG_VHBA
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable Kyber I/O Scheduler"
  plain ""
  plain "The Kyber I/O scheduler is a low-overhead scheduler suitable for multiqueue and other fast devices."
  plain "Given target latencies for reads and synchronous writes, it will self-tune queue depths to achieve that goal."
  plain ""
  read -rp "`echo $' > 1.Disable\n > 2.Enable\n > 3.Default(zen kernel : Enable)\n > Default (Disable)\nchoice[1-3]: '`" _kyber
  if [[ "$_kyber" = "1" ]]; then
    msg2 "Disabling Kyber I/O scheduler"
    scripts/config --disable CONFIG_MQ_IOSCHED_KYBER
  elif [[ "$_kyber" = "2" ]] || [[ "$_kyber" = "3" ]]; then
    msg2 "Enable Kyber I/O scheduler"
    scripts/config --enable CONFIG_MQ_IOSCHED_KYBER
  else
    msg2 "Disabling Kyber I/O scheduler"
    scripts/config --disable CONFIG_MQ_IOSCHED_KYBER
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable MQ-Deadline I/O Scheduler"
  plain ""
  plain "MQ version of the deadline IO scheduler.MQ version of the deadline IO scheduler."
  plain ""
  plain "deadline i/o scheduler : The goal of the deadline io scheduler is to attempt to guarantee a start"
  plain "service time for a request. As we focus mainly on read latencies, this is tunable. When a read request"
  plain "first enters the io scheduler, it is assigned a deadline that is the current time + the read_expire"
  plain "value in units of milliseconds."
  plain ""
  read -rp "`echo $' > 1.Disable\n > 2.Enable\n > 3.Default(zen kernel : Enable)\n > Default (Disable)\nchoice[1-3]: '`" _deadline
  if [[ "$_deadline" = "1" ]]; then
    msg2 "Disabling MQ-Deadline I/O scheduler"
    scripts/config --disable CONFIG_MQ_IOSCHED_DEADLINE
    scripts/config --disable CONFIG_MQ_IOSCHED_DEADLINE_NODEFAULT
  elif [[ "$_deadline" = "2" ]] || [[ "$_deadline" = "3" ]]; then
    msg2 "Enable Deadline I/O scheduler"
    scripts/config --enable CONFIG_MQ_IOSCHED_DEADLINE

    sleep 2s

    plain ""
    plain "#########################################"
    plain "Enable/disable MQ-Deadline-Nodefault I/O Scheduler"
    plain ""
    plain "This renames the mq-deadline scheduler to "mq-deadline-nodefault" and also drops its alias of "deadline"."
    plain "This can prevent existing userspace from forcing this scheduler over the kernel's choice."
    plain ""
    read -rp "`echo $' > 1.Disable\n > 2.Enable\n > 3.Default(zen kernel : Disable)\n > Default (Enable)\nchoice[1-3]: '`" _deadline_nodefault
    if [[ "$_deadline_nodefault" = "1" ]] || [[ "$_deadline_nodefault" = "3" ]]; then
      msg2 "Disable MQ-Deadline-Nodefault I/O scheduler"
      scripts/config --disable CONFIG_MQ_IOSCHED_DEADLINE_NODEFAULT
    elif [[ "$_deadline_nodefault" = "2" ]]; then
      msg2 "Enable MQ-Deadline-Nodefault I/O scheduler"
      scripts/config --enable CONFIG_MQ_IOSCHED_DEADLINE_NODEFAULT
    else
      msg2 "Enable MQ-Deadline-Nodefault I/O scheduler"
      scripts/config --enable CONFIG_MQ_IOSCHED_DEADLINE_NODEFAULT
    fi
  else
    msg2 "Disable MQ-Deadline I/O scheduler"
    scripts/config --disable CONFIG_MQ_IOSCHED_DEADLINE
    scripts/config --disable CONFIG_MQ_IOSCHED_DEADLINE_NODEFAULT
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable CONFIG_BFQ_CGROUP_DEBUG"
  read -rp "`echo $' > 1.Disable\n > 2.Enable\n > 3.Default(zen kernel : Disable)\n > Default (Enable)\nchoice[1-3]: '`" _bfq_cgroup
  if [[ "$_bfq_cgroup" = "1" ]] || [[ "$_bfq_cgroup" = "3" ]]; then
    msg2 "disable CONFIG_BFQ_CGROUP_DEBUG..."
    scripts/config --disable CONFIG_BFQ_CGROUP_DEBUG
  elif [[ "$_bfq_cgroup" = "2" ]]; then
    msg2 "Enable CONFIG_BFQ_CGROUP_DEBUG..."
    scripts/config --enable CONFIG_BFQ_CGROUP_DEBUG
  else
    msg2 "Enable CONFIG_BFQ_CGROUP_DEBUG..."
    scripts/config --enable CONFIG_BFQ_CGROUP_DEBUG
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED"
  plain ""
  plain "If set, automatic process group scheduling will be enabled per"
  plain "default but can be disabled through passing autogroup=0 on the"
  plain "kernel commandline during boot or a value of 0 via the file"
  plain "proc/sys/kernel/sched_autogroup_enabled."
  plain ""
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Enable)\nchoice[1-2]: '`" _autogroup
  if [[ "$_autogroup" = "1" ]]; then
    msg2 "Enable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED"
    scripts/config --enable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED
  elif [[ "$_autogroup" = "2" ]]; then
    msg2 "Disable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED"
    scripts/config --disable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED
  else
    msg2 "Enable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED"
    scripts/config --enable CONFIG_SCHED_AUTOGROUP_DEFAULT_ENABLED
  fi

  sleep 2s

  plain ""
  plain "#########################################"
  plain "Enable/disable CONFIG_RT_GROUP_SCHED (Real-Time group scheduling)"
  plain ""
  plain "Realtime scheduling is all about determinism, a group has to be able to rely on"
  plain "the amount of bandwidth (eg. CPU time) being constant. In order to schedule"
  plain "multiple groups of realtime tasks, each group must be assigned a fixed portion"
  plain "of the CPU time available.  Without a minimum guarantee a realtime group can"
  plain "obviously fall short. A fuzzy upper limit is of no use since it cannot be"
  plain "relied upon. Which leaves us with just the single fixed portion."
  plain ""
  read -rp "`echo $' > 1.Enable\n > 2.Disable\n > Default (Disable)\nchoice[1-2]: '`" _rt_group;
  if [[ $_rt_group = "1" ]]; then
    msg2 "Enable CONFIG_RT_GROUP_SCHED"
    scripts/config --enable CONFIG_RT_GROUP_SCHED
  elif [[ $_rt_group = "2" ]]; then
    msg2 "Disable CONFIG_RT_GROUP_SCHED"
    scripts/config --undefine CONFIG_RT_GROUP_SCHED
    scripts/config --disable CONFIG_RT_GROUP_SCHED
  else
    msg2 "Enable CONFIG_RT_GROUP_SCHED"
    scripts/config --undefine CONFIG_RT_GROUP_SCHED
    scripts/config --disable CONFIG_RT_GROUP_SCHED
  fi

  sleep 2s

  plain ""
  if [[ $_cpu_sched = "1" ]]; then
    msg2 "Enable MuQSS"
    scripts/config --enable CONFIG_SCHED_MC
    scripts/config --enable CONFIG_SCHED_SMT
    scripts/config --enable CONFIG_SMP
    scripts/config --enable CONFIG_SCHED_MC_PRIO
    scripts/config --enable CONFIG_SCHED_MUQSS
    msg2 "Disable CFS"
    scripts/config --disable CONFIG_FAIR_GROUP_SCHED
    scripts/config --disable CONFIG_CFS_BANDWIDTH

    plain ""
    plain "#########################################"
    plain "MuQSS configuration"
    plain ""
    plain "Set CONFIG_RQ"
    plain ""
    plain "RQ_NONE : No sharing: This is the default behaviour where the CPU scheduler has one runqueue per CPU, whether"
    plain "it is a physical or logical CPU (hyperthread)."
    plain ""
    plain "RQ_SMT : SMT (hyperthread) siblings : With this option enabled, the CPU scheduler will have one runqueue shared by SMT"
    plain "(hyperthread) siblings. As these logical cores share one physical core, sharing the runqueue resource can lead to decreased"
    plain "overhead, lower latency and higher throughput."
    plain ""
    plain "RQ_MC : Multicore siblings : With this option enabled, the CPU scheduler will have one runqueue shared by multicore siblings"
    plain "in addition to any SMT siblings. As these physical cores share caches, sharing the runqueue resource will lead to lower latency,"
    plain "but its effects on overhead and throughput are less predictable. As a general rule, 6 or fewer cores will likely benefit from this,"
    plain "while larger CPUs will only derive a latency benefit. If your workloads are primarily single threaded, this will possibly worsen"
    plain "throughput. If you are only concerned about latency then enable this regardless of how many cores you have."
    plain ""
    plain "RQ_MC_LLC : Multicore siblings (LLC) : With this option enabled, the CPU scheduler will behave similarly as with Multicore siblings."
    plain "This option takes LLC cache into account when scheduling tasks. Option may benefit CPUs with multiple LLC caches,"
    plain "such as Ryzen and Xeon CPUs."
    plain ""
    plain "RQ_SMP : Symmetric Multi-Processing : With this option enabled, the CPU scheduler will have one runqueue shared by all physical"
    plain "CPUs unless they are on separate NUMA nodes. As physical CPUs usually do not share resources, sharing the runqueue will normally"
    plain "worsen throughput but improve latency. If you only care about latency enable this"
    plain ""
    plain "RQ_ALL : With this option enabled, the CPU scheduler will have one runqueue regardless of the architecture configuration, including"
    plain "across NUMA nodes. This can substantially decrease throughput in NUMA configurations, but light NUMA designs will not be dramatically"
    plain "affected. This option should only be chosen if latency is the prime concern."
    plain ""
    read -rp "`echo $' > 1.RQ_NONE\n > 2.RQ_SMT\n > 3.RQ_MC\n > 4.RQ_MC_LLC\n > 5.RQ_SMP\n > 6.RQ_ALL\n > Default (RQ_MC)\nchoice[1-6]: '`" _config_rq
    if [[ $_config_rq = "1" ]]; then
      msg2 "Set to RQ_NONE"
      scripts/config --enable CONFIG_RQ_NONE
      scripts/config --set-val CONFIG_SHARERQ 0
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    elif [[ $_config_rq = "2" ]]; then
      msg2 "Set to RQ_SMT"
      scripts/config --enable CONFIG_RQ_SMT
      scripts/config --set-val CONFIG_SHARERQ 1
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH

      sleep 2

      plain ""
      plain "#########################################"
      plain "Enable/disable CONFIG_SMT_NICE"
      plain ""
      plain "SMT nice support makes each logical CPU aware of what is running on"
      plain "its hyperthread siblings, maintaining appropriate distribution of"
      plain "CPU according to nice levels and scheduling policies at the expense"
      plain "of slightly increased overhead."
      plain "If unsure Enable"
      plain ""
      read -rp "`echo $' > 1.Disable\n > 2.Enable\n > Default (Enable)\nchoice[1-2]: '`" _smt_nice
      if [[ $_smt_nice = "1" ]]; then
        msg2 "Disable CONFIG_SMT_NICE"
        scripts/config --disable CONFIG_SMT_NICE
      elif [[ $_smt_nice = "2" ]]; then
        msg2 "Enable CONFIG_SMT_NICE"
        scripts/config --enable CONFIG_SMT_NICE
      else
        msg2 "Enable CONFIG_SMT_NICE"
        scripts/config --enable CONFIG_SMT_NICE
      fi

    elif [[ $_config_rq = "3" ]]; then
      msg2 "Set to RQ_MC"
      scripts/config --enable CONFIG_RQ_MC
      scripts/config --set-val CONFIG_SHARERQ 2
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    elif [[ $_config_rq = "4" ]]; then
      msg2 "Set to RQ_MC_LLC"
      scripts/config --enable CONFIG_RQ_MC_LLC
      scripts/config --set-val CONFIG_SHARERQ 3
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    elif [[ $_config_rq = "5" ]]; then
      msg2 "Set to RQ_SMP"
      scripts/config --enable CONFIG_RQ_SMP
      scripts/config --set-val CONFIG_SHARERQ 4
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    elif [[ $_config_rq = "6" ]]; then
      msg2 "Set to RQ_ALL"
      scripts/config --enable CONFIG_RQ_ALL
      scripts/config --set-val CONFIG_SHARERQ 5
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    else
      msg2 "Set to RQ_MC"
      scripts/config --enable CONFIG_RQ_MC
      scripts/config --set-val CONFIG_SHARERQ 2
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    fi
  elif [[ $_cpu_sched = "2" ]]; then
    msg2 "Enable CONFIG_SCHED_ALT, this feature enable alternative CPU scheduler..."
    scripts/config --enable CONFIG_SCHED_ALT
    msg2 "Enable BMQ CPU scheduler..."
    scripts/config --enable CONFIG_SCHED_BMQ
    scripts/config --disable CONFIG_SCHED_PDS
    msg2 "Disable CFS"
    scripts/config --disable CONFIG_FAIR_GROUP_SCHED
    scripts/config --disable CONFIG_CFS_BANDWIDTH
  elif [[ $_cpu_sched = "3" ]]; then
    msg2 "Enable CONFIG_SCHED_ALT, this feature enable alternative CPU scheduler..."
    scripts/config --enable CONFIG_SCHED_ALT
    msg2 "Enable PDS CPU scheduler..."
    scripts/config --disable CONFIG_SCHED_BMQ
    scripts/config --enable CONFIG_SCHED_PDS
    msg2 "Disable CFS"
    scripts/config --disable CONFIG_FAIR_GROUP_SCHED
    scripts/config --disable CONFIG_CFS_BANDWIDTH
  else
    plain ""
    plain "#########################################"
    plain "Enable/disable CFS"
    read -rp "`echo $' > 1.Disable\n > 2.Enable\n > Default (Enable)\nchoice[1-2]: '`" _cfs
    if [[ $_cfs = "1" ]]; then
      msg2 "Disable CFS"
      scripts/config --disable CONFIG_FAIR_GROUP_SCHED
      scripts/config --disable CONFIG_CFS_BANDWIDTH
    elif [[ $_cfs = "2" ]]; then
      msg2 "Enable CFS"
      scripts/config --enable CONFIG_FAIR_GROUP_SCHED
      scripts/config --enable CONFIG_CFS_BANDWIDTH
    else
      msg2 "Enable CFS"
      scripts/config --enable CONFIG_FAIR_GROUP_SCHED
      scripts/config --enable CONFIG_CFS_BANDWIDTH
    fi
  fi

  sleep 2s
}

general_setup(){
  # # Security options
  # plain ""
  # msg2 "Enable Security options"
  # # Security
  # scripts/config --enable CONFIG_SECURITY_DMESG_RESTRICT
  # scripts/config --enable CONFIG_SECURITY
  # scripts/config --enable CONFIG_SECURITY_WRITABLE_HOOKS
  # scripts/config --enable CONFIG_SECURITYFS
  # scripts/config --enable CONFIG_SECURITY_NETWORK
  # scripts/config --enable CONFIG_PAGE_TABLE_ISOLATION
  # scripts/config --enable CONFIG_SECURITY_INFINIBAND
  # scripts/config --enable CONFIG_SECURITY_NETWORK_XFRM
  # scripts/config --enable CONFIG_SECURITY_PATH
  # scripts/config --enable CONFIG_INTEL_TXT
  # scripts/config --set-val CONFIG_LSM_MMAP_MIN_ADDR 65536
  # scripts/config --enable CONFIG_HAVE_HARDENED_USERCOPY_ALLOCATOR
  # scripts/config --enable CONFIG_HARDENED_USERCOPY
  # scripts/config --enable CONFIG_HARDENED_USERCOPY_FALLBACK
  # scripts/config --enable CONFIG_HARDENED_USERCOPY_PAGESPAN
  # scripts/config --enable CONFIG_FORTIFY_SOURCE
  # scripts/config --enable CONFIG_STATIC_USERMODEHELPER
  # scripts/config --enable CONFIG_STATIC_USERMODEHELPER_PATH
  # scripts/config --set-val CONFIG_LSM "lockdown,yama,bpf"
  # # Safesetid
  # scripts/config --enable CONFIG_SECURITY_SAFESETID
  # # Selinux
  # scripts/config --enable CONFIG_SECURITY_SELINUX
  # scripts/config --enable CONFIG_SECURITY_SELINUX_BOOTPARAM
  # scripts/config --disable CONFIG_SECURITY_SELINUX_DISABLE
  # scripts/config --enable CONFIG_SECURITY_SELINUX_DEVELOP
  # scripts/config --enable CONFIG_SECURITY_SELINUX_AVC_STATS
  # scripts/config --set-val CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE 0
  # scripts/config --set-val CONFIG_SECURITY_SELINUX_SIDTAB_HASH_BITS 13
  # scripts/config --set-val CONFIG_SECURITY_SELINUX_SID2STR_CACHE_SIZE 256
  # # Smack
  # scripts/config --enable CONFIG_SECURITY_SMACK
  # scripts/config --enable CONFIG_SECURITY_SMACK_BRINGUP
  # scripts/config --enable CONFIG_SECURITY_SMACK_NETFILTER
  # scripts/config --enable CONFIG_SECURITY_SMACK_APPEND_SIGNALS
  # # Tomoyo
  # scripts/config --enable CONFIG_SECURITY_TOMOYO
  # scripts/config --set-val CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY 2048
  # scripts/config --set-val CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG 1024
  # scripts/config --enable CONFIG_SECURITY_TOMOYO_OMIT_USERSPACE_LOADER
  # scripts/config --set-str CONFIG_SECURITY_TOMOYO_POLICY_LOADER "/sbin/tomoyo-init"
  # scripts/config --set-str CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER "/sbin/init"
  # scripts/config --disable CONFIG_SECURITY_TOMOYO_INSECURE_BUILTIN_SETTING
  # # Apparmor
  # scripts/config --enable CONFIG_SECURITY_APPARMOR
  # scripts/config --enable CONFIG_SECURITY_APPARMOR_HASH
  # scripts/config --enable CONFIG_SECURITY_APPARMOR_HASH_DEFAULT
  # # Yama
  # scripts/config --enable CONFIG_SECURITY_YAMA
  #
  # sleep 2s
  #
  # # Library routines
  # msg2 "Enable Library routines (CONFIG_FONT_TER16x32)"
  # scripts/config --enable CONFIG_FONT_TER16x32
  #
  # sleep 2s
  #
  # # Kernel hacking -> Compile-time checks and compiler options -> Make section mismatch errors non-fatal
  # msg2 "Enable CONFIG_SECTION_MISMATCH_WARN_ONLY"
  # scripts/config --enable CONFIG_SECTION_MISMATCH_WARN_ONLY
  #
  # sleep 2s

  # Disable accessibility
  msg2 "Disable accessibility"
  scripts/config --disable CONFIG_ACCESSIBILITY
  # Disable braille
  echo "Disable braille"
  scripts/config --disable CONFIG_A11Y_BRAILLE_CONSOLE
  # Disable screen reader
  echo "Disable screen reader"
  scripts/config --disable CONFIG_SPEAKUP
  scripts/config --disable CONFIG_SPEAKUP_SERIALIO
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_ACNTSA
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_ACNTPC
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_APOLLO
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_AUDPTR
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_BNS
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_DECTLK
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_DECEXT
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_DECPC
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_DTLK
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_KEYPC
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_LTLK
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_SOFT
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_SPKOUT
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_TXPRT
  scripts/config --disable CONFIG_SPEAKUP_SYNTH_DUMMY

  sleep 2s

  # Disable uneeded gpu drivers
  msg2 "Disable uneeded gpu drivers"
  # Arc
  echo "Disable Arc drivers"
  scripts/config --disable CONFIG_DRM_ARCPGU
  # Arm
  echo "Disable Arm drivers"
  scripts/config --disable CONFIG_DRM_HDLCD
  scripts/config --disable CONFIG_DRM_HDLCD_SHOW_UNDERRUN
  scripts/config --disable CONFIG_DRM_MALI_DISPLAY
  scripts/config --disable CONFIG_DRM_KOMEDA
  # Armada
  echo "Disable Armada drivers"
  scripts/config --disable CONFIG_DRM_ARMADA
  # Aspeed
  echo "Disable Aspeed drivers"
  scripts/config --disable CONFIG_DRM_ASPEED_GFX
  # Ast
  echo "Disable Ast drivers"
  scripts/config --disable CONFIG_DRM_AST
  # Atmel-hlcdc
  echo "Disable Atmel-hlcdc drivers"
  scripts/config --disable CONFIG_DRM_ATMEL_HLCDC
  # Bochs
  echo "Disable Bochs drivers"
  scripts/config --disable CONFIG_DRM_BOCHS
  # Bridge
  echo "Disable Bridge drivers"
  scripts/config --disable CONFIG_DRM_CDNS_DSI
  scripts/config --disable CONFIG_DRM_CHRONTEL_CH7033
  scripts/config --disable CONFIG_DRM_DISPLAY_CONNECTOR
  scripts/config --disable CONFIG_DRM_LONTIUM_LT9611
  scripts/config --disable CONFIG_DRM_LONTIUM_LT9611UXC
  scripts/config --disable CONFIG_DRM_LVDS_CODEC
  scripts/config --disable CONFIG_DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW
  scripts/config --disable CONFIG_DRM_NWL_MIPI_DSI
  scripts/config --disable CONFIG_DRM_NXP_PTN3460
  scripts/config --disable CONFIG_DRM_PARADE_PS8622
  scripts/config --disable CONFIG_DRM_PARADE_PS8640
  scripts/config --disable CONFIG_DRM_SIL_SII8620
  scripts/config --disable CONFIG_DRM_SII902X
  scripts/config --disable CONFIG_DRM_SII9234
  scripts/config --disable CONFIG_DRM_SIMPLE_BRIDGE
  scripts/config --disable CONFIG_DRM_THINE_THC63LVD1024
  scripts/config --disable CONFIG_DRM_TOSHIBA_TC358762
  scripts/config --disable CONFIG_DRM_TOSHIBA_TC358764
  scripts/config --disable CONFIG_DRM_TOSHIBA_TC358767
  scripts/config --disable CONFIG_DRM_TOSHIBA_TC358768
  scripts/config --disable CONFIG_DRM_TOSHIBA_TC358775
  scripts/config --disable CONFIG_DRM_TI_TFP410
  scripts/config --disable CONFIG_DRM_TI_SN65DSI86
  scripts/config --disable CONFIG_DRM_TI_TPD12S015
  # Bridge/ADV
  echo "Disable Bridge/Adv drivers"
  scripts/config --disable CONFIG_DRM_I2C_ADV7511
  scripts/config --disable CONFIG_DRM_I2C_ADV7511_AUDIO
  scripts/config --disable CONFIG_DRM_I2C_ADV7511_CEC
  # Bridge/Analogix
  echo "Disable Bridge/Analogix drivers"
  scripts/config --disable CONFIG_DRM_ANALOGIX_ANX6345
  scripts/config --disable CONFIG_DRM_ANALOGIX_ANX78XX
  scripts/config --disable CONFIG_DRM_ANALOGIX_DP
  scripts/config --disable CONFIG_DRM_ANALOGIX_ANX7625
  # Bridge/Synopsys
  echo "Disable Bridge/Synopsys drivers"
  scripts/config --disable CONFIG_DRM_DW_HDMI
  scripts/config --disable CONFIG_DRM_DW_HDMI_AHB_AUDIO
  scripts/config --disable CONFIG_DRM_DW_HDMI_I2S_AUDIO
  scripts/config --disable CONFIG_DRM_DW_HDMI_CEC
  scripts/config --disable CONFIG_DRM_DW_MIPI_DSI
  # Etnaviv
  echo "Disable Etnaviv drivers"
  scripts/config --disable CONFIG_DRM_ETNAVIV
  scripts/config --disable CONFIG_DRM_ETNAVIV_THERMAL
  # Exynos
  echo "Disable Exynos drivers"
  scripts/config --disable CONFIG_DRM_EXYNOS
  scripts/config --disable CONFIG_DRM_EXYNOS_FIMD
  scripts/config --disable CONFIG_DRM_EXYNOS5433_DECON
  scripts/config --disable CONFIG_DRM_EXYNOS7_DECON
  scripts/config --disable CONFIG_DRM_EXYNOS_MIXER
  scripts/config --disable CONFIG_DRM_EXYNOS_VIDI
  scripts/config --disable CONFIG_DRM_EXYNOS_DPI
  scripts/config --disable CONFIG_DRM_EXYNOS_DSI
  scripts/config --disable CONFIG_DRM_EXYNOS_DP
  scripts/config --disable CONFIG_DRM_EXYNOS_HDMI
  scripts/config --disable CONFIG_DRM_EXYNOS_MIC
  scripts/config --disable CONFIG_DRM_EXYNOS_G2D
  scripts/config --disable CONFIG_DRM_EXYNOS_IPP
  scripts/config --disable CONFIG_DRM_EXYNOS_FIMC
  scripts/config --disable CONFIG_DRM_EXYNOS_ROTATOR
  scripts/config --disable CONFIG_DRM_EXYNOS_SCALER
  scripts/config --disable CONFIG_DRM_EXYNOS_GSC
  # Fsl-dcu
  echo "Disable Fsl-dcu drivers"
  scripts/config --disable CONFIG_DRM_FSL_DCU
  # Hisilicon
  echo "Disable Hisilicon drivers"
  scripts/config --disable CONFIG_DRM_HISI_HIBMC
  scripts/config --disable CONFIG_DRM_HISI_KIRIN
  # I2c
  echo "Disable I2c drivers"
  scripts/config --disable CONFIG_DRM_I2C_CH7006
  scripts/config --disable CONFIG_DRM_I2C_SIL164
  scripts/config --disable CONFIG_DRM_I2C_NXP_TDA998X
  scripts/config --disable CONFIG_DRM_I2C_NXP_TDA9950
  # IMX
  echo "Disable Imx drivers"
  scripts/config --disable CONFIG_DRM_IMX_DCSS
  scripts/config --disable CONFIG_DRM_IMX
  scripts/config --disable CONFIG_DRM_IMX_PARALLEL_DISPLAY
  scripts/config --disable CONFIG_DRM_IMX_TVE
  scripts/config --disable CONFIG_DRM_IMX_LDB
  scripts/config --disable CONFIG_DRM_IMX_HDMI
  # Ingenic
  echo "Disable Ingenic drivers"
  scripts/config --disable CONFIG_DRM_INGENIC
  scripts/config --disable CONFIG_DRM_INGENIC_IPU
  # Kmb
  echo "Disable Kmb drivers"
  scripts/config --disable CONFIG_DRM_KMB_DISPLAY
  # Lima
  echo "Disable Lima drivers"
  scripts/config --disable CONFIG_DRM_LIMA
  # MCDE
  echo "Disable Mcda drivers"
  scripts/config --disable CONFIG_DRM_MCDE
  # Mediatek
  echo "Disable Mediatek drivers"
  scripts/config --disable CONFIG_DRM_MEDIATEK
  scripts/config --disable CONFIG_DRM_MEDIATEK_HDMI
  # Meson
  echo "Disable Meson drivers"
  scripts/config --disable CONFIG_DRM_MESON
  scripts/config --disable CONFIG_DRM_MESON_DW_HDMI
  # Mgag200
  echo "Disable Mgag200 drivers"
  scripts/config --disable CONFIG_DRM_MGAG200
  # Msm
  echo "Disable Msm drivers"
  scripts/config --disable CONFIG_DRM_MSM
  scripts/config --disable CONFIG_DRM_MSM_GPU_STATE
  scripts/config --disable CONFIG_DRM_MSM_REGISTER_LOGGING
  scripts/config --disable CONFIG_DRM_MSM_GPU_SUDO
  scripts/config --disable CONFIG_DRM_MSM_HDMI_HDCP
  scripts/config --disable CONFIG_DRM_MSM_DP
  scripts/config --disable CONFIG_DRM_MSM_DSI
  scripts/config --disable CONFIG_DRM_MSM_DSI_PLL
  scripts/config --disable CONFIG_DRM_MSM_DSI_28NM_PHY
  scripts/config --disable CONFIG_DRM_MSM_DSI_20NM_PHY
  scripts/config --disable CONFIG_DRM_MSM_DSI_28NM_8960_PHY
  scripts/config --disable CONFIG_DRM_MSM_DSI_14NM_PHY
  scripts/config --disable CONFIG_DRM_MSM_DSI_10NM_PHY
  scripts/config --disable CONFIG_DRM_MSM_DSI_7NM_PHY
  # MXSFB
  echo "Disable MXSFB drivers"
  scripts/config --disable CONFIG_DRM_MXS
  scripts/config --disable CONFIG_DRM_MXSFB
  # Omapdrm
  echo "Disable Omapdrm drivers"
  scripts/config --disable CONFIG_DRM_OMAP
  scripts/config --disable CONFIG_DRM_OMAP_PANEL_DSI_CM
  scripts/config --disable CONFIG_OMAP2_DSS_INIT
  scripts/config --disable CONFIG_OMAP_DSS_BASE
  scripts/config --disable CONFIG_OMAP2_DSS
  scripts/config --disable CONFIG_OMAP2_DSS_DEBUG
  scripts/config --disable CONFIG_OMAP2_DSS_DEBUGFS
  scripts/config --disable CONFIG_OMAP2_DSS_COLLECT_IRQ_STATS
  scripts/config --disable CONFIG_OMAP2_DSS_DPI
  scripts/config --disable CONFIG_OMAP2_DSS_VENC
  scripts/config --disable CONFIG_OMAP2_DSS_HDMI_COMMON
  scripts/config --disable CONFIG_OMAP4_DSS_HDMI
  scripts/config --disable CONFIG_OMAP4_DSS_HDMI_CEC
  scripts/config --disable CONFIG_OMAP5_DSS_HDMI
  scripts/config --disable CONFIG_OMAP2_DSS_SDI
  scripts/config --disable CONFIG_OMAP2_DSS_DSI
  scripts/config --disable CONFIG_OMAP2_DSS_MIN_FCK_PER_PCK
  scripts/config --disable CONFIG_OMAP2_DSS_SLEEP_AFTER_VENC_RESET
  # Panfrost
  echo "Disable Panfrost drivers"
  scripts/config --disable CONFIG_DRM_PANFROST
  # Panel
  echo "Disable Panel drivers"
  scripts/config --disable CONFIG_DRM_PANEL
  scripts/config --disable CONFIG_DRM_PANEL_ABT_Y030XX067A
  scripts/config --disable CONFIG_DRM_PANEL_ARM_VERSATILE
  scripts/config --disable CONFIG_DRM_PANEL_ASUS_Z00T_TM5P5_NT35596
  scripts/config --disable CONFIG_DRM_PANEL_BOE_HIMAX8279D
  scripts/config --disable CONFIG_DRM_PANEL_BOE_TV101WUM_NL6
  scripts/config --disable CONFIG_DRM_PANEL_LVDS
  scripts/config --disable CONFIG_DRM_PANEL_SIMPLE
  scripts/config --disable CONFIG_DRM_PANEL_ELIDA_KD35T133
  scripts/config --disable CONFIG_DRM_PANEL_FEIXIN_K101_IM2BA02
  scripts/config --disable CONFIG_DRM_PANEL_FEIYANG_FY07024DI26A30D
  scripts/config --disable CONFIG_DRM_PANEL_ILITEK_IL9322
  scripts/config --disable CONFIG_DRM_PANEL_ILITEK_ILI9881C
  scripts/config --disable CONFIG_DRM_PANEL_INNOLUX_P079ZCA
  scripts/config --disable CONFIG_DRM_PANEL_JDI_LT070ME05000
  scripts/config --disable CONFIG_DRM_PANEL_KINGDISPLAY_KD097D04
  scripts/config --disable CONFIG_DRM_PANEL_LEADTEK_LTK050H3146W
  scripts/config --disable CONFIG_DRM_PANEL_LEADTEK_LTK500HD1829
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_LD9040
  scripts/config --disable CONFIG_DRM_PANEL_LG_LB035Q02
  scripts/config --disable CONFIG_DRM_PANEL_LG_LG4573
  scripts/config --disable CONFIG_DRM_PANEL_NEC_NL8048HL11
  scripts/config --disable CONFIG_DRM_PANEL_NOVATEK_NT35510
  scripts/config --disable CONFIG_DRM_PANEL_NOVATEK_NT36672A
  scripts/config --disable CONFIG_DRM_PANEL_NOVATEK_NT39016
  scripts/config --disable CONFIG_DRM_PANEL_MANTIX_MLAF057WE51
  scripts/config --disable CONFIG_DRM_PANEL_OLIMEX_LCD_OLINUXINO
  scripts/config --disable CONFIG_DRM_PANEL_ORISETECH_OTM8009A
  scripts/config --disable CONFIG_DRM_PANEL_OSD_OSD101T2587_53TS
  scripts/config --disable CONFIG_DRM_PANEL_PANASONIC_VVX10F034N00
  scripts/config --disable CONFIG_DRM_PANEL_RASPBERRYPI_TOUCHSCREEN
  scripts/config --disable CONFIG_DRM_PANEL_RAYDIUM_RM67191
  scripts/config --disable CONFIG_DRM_PANEL_RAYDIUM_RM68200
  scripts/config --disable CONFIG_DRM_PANEL_RONBO_RB070D30
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6D16D0
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E3HA2
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E63J0X03
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E63M0
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E63M0_SPI
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E63M0_DSI
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_S6E8AA0
  scripts/config --disable CONFIG_DRM_PANEL_SAMSUNG_SOFEF00
  scripts/config --disable CONFIG_DRM_PANEL_SEIKO_43WVF1G
  scripts/config --disable CONFIG_DRM_PANEL_SHARP_LQ101R1SX01
  scripts/config --disable CONFIG_DRM_PANEL_SHARP_LS037V7DW01
  scripts/config --disable CONFIG_DRM_PANEL_SHARP_LS043T1LE01
  scripts/config --disable CONFIG_DRM_PANEL_SITRONIX_ST7701
  scripts/config --disable CONFIG_DRM_PANEL_SITRONIX_ST7703
  scripts/config --disable CONFIG_DRM_PANEL_SITRONIX_ST7789V
  scripts/config --disable CONFIG_DRM_PANEL_SONY_ACX424AKP
  scripts/config --disable CONFIG_DRM_PANEL_SONY_ACX565AKM
  scripts/config --disable CONFIG_DRM_PANEL_TDO_TL070WSH30
  scripts/config --disable CONFIG_DRM_PANEL_TPO_TD028TTEC1
  scripts/config --disable CONFIG_DRM_PANEL_TPO_TD043MTEA1
  scripts/config --disable CONFIG_DRM_PANEL_TPO_TPG110
  scripts/config --disable CONFIG_DRM_PANEL_TRULY_NT35597_WQXGA
  scripts/config --disable CONFIG_DRM_PANEL_VISIONOX_RM69299
  scripts/config --disable CONFIG_DRM_PANEL_XINPENG_XPP055C272
  # PL111
  echo "Disable PL111 drivers"
  scripts/config --disable CONFIG_DRM_PL111
  # Qxl
  echo "Disable Qxl drivers"
  scripts/config --disable CONFIG_DRM_QXL
  # Rcar-du
  echo "Disable Rcar-du drivers"
  scripts/config --disable CONFIG_DRM_RCAR_DU
  scripts/config --disable CONFIG_DRM_RCAR_CMM
  scripts/config --disable CONFIG_DRM_RCAR_DW_HDMI
  scripts/config --disable CONFIG_DRM_RCAR_LVDS
  scripts/config --disable CONFIG_DRM_RCAR_VSP
  scripts/config --disable CONFIG_DRM_RCAR_WRITEBACK
  # Rockchip
  echo "Disable Rockchip drivers"
  scripts/config --disable CONFIG_DRM_ROCKCHIP
  scripts/config --disable CONFIG_ROCKCHIP_ANALOGIX_DP
  scripts/config --disable CONFIG_ROCKCHIP_CDN_DP
  scripts/config --disable CONFIG_ROCKCHIP_DW_HDMI
  scripts/config --disable CONFIG_ROCKCHIP_DW_MIPI_DSI
  scripts/config --disable CONFIG_ROCKCHIP_INNO_HDMI
  scripts/config --disable CONFIG_ROCKCHIP_LVDS
  scripts/config --disable CONFIG_ROCKCHIP_RGB
  scripts/config --disable CONFIG_ROCKCHIP_RK3066_HDMI
  # SH Mobile
  echo "Disable SH Mobile drivers"
  scripts/config --disable CONFIG_DRM_SHMOBILE
  # Sti
  echo "Disable Sti drivers"
  scripts/config --disable CONFIG_DRM_STI
  # Stm
  echo "Disable Stm drivers"
  scripts/config --disable CONFIG_DRM_STM
  scripts/config --disable CONFIG_DRM_STM_DSI
  # Sun4I
  echo "Disable Sun4I drivers"
  scripts/config --disable CONFIG_DRM_SUN4I
  scripts/config --disable CONFIG_DRM_SUN4I_HDMI
  scripts/config --disable CONFIG_DRM_SUN4I_HDMI_CEC
  scripts/config --disable CONFIG_DRM_SUN4I_BACKEND
  scripts/config --disable CONFIG_DRM_SUN6I_DSI
  scripts/config --disable CONFIG_DRM_SUN8I_DW_HDMI
  scripts/config --disable CONFIG_DRM_SUN8I_MIXER
  scripts/config --disable CONFIG_DRM_SUN8I_TCON_TOP
  # Tegra
  echo "Disable Tegra drivers"
  scripts/config --disable CONFIG_DRM_TEGRA
  scripts/config --disable CONFIG_DRM_TEGRA_DEBUG
  scripts/config --disable CONFIG_DRM_TEGRA_STAGING
  # Tidss
  echo "Disable Tidss drivers"
  scripts/config --disable CONFIG_DRM_TIDSS
  # Tilcdc
  echo "Disable Tilcdc drivers"
  scripts/config --disable CONFIG_DRM_TILCDC
  # Tiny
  echo "Disable Tiny drivers"
  scripts/config --disable CONFIG_DRM_CIRRUS_QEMU
  scripts/config --disable CONFIG_DRM_GM12U320
  scripts/config --disable CONFIG_TINYDRM_HX8357D
  scripts/config --disable CONFIG_TINYDRM_ILI9225
  scripts/config --disable CONFIG_TINYDRM_ILI9341
  scripts/config --disable CONFIG_TINYDRM_ILI9486
  scripts/config --disable CONFIG_TINYDRM_MI0283QT
  scripts/config --disable CONFIG_TINYDRM_REPAPER
  scripts/config --disable CONFIG_TINYDRM_ST7586
  scripts/config --disable CONFIG_TINYDRM_ST7735R
  # Tve200
  echo "Disable Tve200 drivers"
  scripts/config --disable CONFIG_DRM_TVE200
  # Udl
  echo "Disable Udl drivers"
  scripts/config --disable CONFIG_DRM_UDL
  # V3d
  echo "Disable V3d drivers"
  scripts/config --disable CONFIG_DRM_V3D
  # Vc4
  echo "Disable Vc4 drivers"
  scripts/config --disable CONFIG_DRM_VC4
  scripts/config --disable CONFIG_DRM_VC4_HDMI_CEC
  # Xlnx
  echo "Disable Xlnx drivers"
  scripts/config --disable CONFIG_DRM_ZYNQMP_DPSUB
  # Zte
  echo "Disable Zte drivers"
  scripts/config --disable CONFIG_DRM_ZTE

  sleep 2s

  # Add full support for DRM
  msg2 "Add full support for DRM"
  scripts/config --module CONFIG_DRM
  scripts/config --module CONFIG_DRM_MIPI_DBI
  scripts/config --enable CONFIG_DRM_MIPI_DSI
  scripts/config --enable CONFIG_DRM_DP_AUX_CHARDEV
  scripts/config --enable CONFIG_DRM_KMS_HELPER
  scripts/config --enable CONFIG_DRM_KMS_FB_HELPER
  scripts/config --enable CONFIG_DRM_FBDEV_EMULATION
  scripts/config --set-val CONFIG_DRM_FBDEV_OVERALLOC 100
  scripts/config --enable CONFIG_DRM_FBDEV_LEAK_PHYS_SMEM
  scripts/config --enable CONFIG_DRM_LOAD_EDID_FIRMWARE
  scripts/config --enable CONFIG_DRM_DP_CEC
  scripts/config --module CONFIG_DRM_TTM
  scripts/config --module CONFIG_DRM_VRAM_HELPER
  scripts/config --module CONFIG_DRM_TTM_HELPER
  scripts/config --enable CONFIG_DRM_GEM_CMA_HELPER
  scripts/config --enable CONFIG_DRM_KMS_CMA_HELPER
  scripts/config --enable CONFIG_DRM_GEM_SHMEM_HELPER
  scripts/config --enable CONFIG_DRM_VM
  scripts/config --module CONFIG_DRM_SCHED
  scripts/config --module CONFIG_DRM_RADEON
  scripts/config --module CONFIG_DRM_AMDGPU
  scripts/config --module CONFIG_DRM_VGEM
  scripts/config --module CONFIG_DRM_VKMS
  scripts/config --enable CONFIG_DRM_LEGACY
  scripts/config --module CONFIG_DRM_TDFX
  scripts/config --module CONFIG_DRM_R128
  scripts/config --module CONFIG_DRM_I810
  scripts/config --module CONFIG_DRM_MGA
  scripts/config --module CONFIG_DRM_SIS
  scripts/config --module CONFIG_DRM_VIA
  scripts/config --module CONFIG_DRM_SAVAGE
  scripts/config --enable CONFIG_DRM_EXPORT_FOR_TESTS
  scripts/config --enable CONFIG_DRM_PANEL_ORIENTATION_QUIRKS
  scripts/config --enable CONFIG_DRM_LIB_RANDOM
  scripts/config --enable CONFIG_DRM_DEBUG_MM
  scripts/config --enable CONFIG_DRM_DEBUG_SELFTEST
  scripts/config --enable CONFIG_DRM_DEBUG_DP_MST_TOPOLOGY_REFS

  sleep 2s

  # Enable CONFIG_DRM_BRIDGE/CONFIG_DRM_PANEL_BRIDGE
  msg2 "Enable CONFIG_DRM_BRIDGE/CONFIG_DRM_PANEL_BRIDGE"
  scripts/config --enable CONFIG_DRM_BRIDGE
  scripts/config --enable CONFIG_DRM_PANEL_BRIDGE

  sleep 2s

  # Add full support for amd/intel/nouveau gpu
  msg2 "Add full support for amd/intel/nouveau gpu"
  # AMD
  echo "Enable full support for AMD GPU"
  scripts/config --enable CONFIG_DRM_AMD_ACP
  scripts/config --enable CONFIG_DRM_AMDGPU_SI
  scripts/config --enable CONFIG_DRM_AMDGPU_CIK
  scripts/config --enable CONFIG_DRM_AMDGPU_USERPTR
  scripts/config --enable CONFIG_DRM_AMDGPU_GART_DEBUGFS
  scripts/config --enable CONFIG_HSA_AMD
  scripts/config --enable CONFIG_DRM_AMD_DC
  scripts/config --enable CONFIG_DRM_AMD_DC_DCN
  scripts/config --enable CONFIG_DRM_AMD_DC_HDCP
  scripts/config --enable CONFIG_DRM_AMD_DC_SI
  scripts/config --enable CONFIG_DEBUG_KERNEL_DC
  scripts/config --enable CONFIG_DRM_RADEON_USERPTR
  # Intel
  echo "Enable full support for Intel GPU"
  scripts/config --module CONFIG_DRM_I915
  scripts/config --set-val CONFIG_DRM_I915_FORCE_PROBE "*"
  scripts/config --enable CONFIG_DRM_I915_CAPTURE_ERROR
  scripts/config --enable CONFIG_DRM_I915_COMPRESS_ERROR
  scripts/config --enable CONFIG_DRM_I915_USERPTR
  scripts/config --enable CONFIG_DRM_I915_GVT
  scripts/config --enable CONFIG_DRM_I915_GVT_KVMGT
  scripts/config --enable CONFIG_DRM_I915_WERROR
  scripts/config --enable CONFIG_DRM_I915_DEBUG
  scripts/config --enable CONFIG_DRM_I915_DEBUG_MMIO
  scripts/config --enable CONFIG_DRM_I915_DEBUG_GEM
  scripts/config --enable CONFIG_DRM_I915_ERRLOG_GEM
  scripts/config --enable CONFIG_DRM_I915_TRACE_GEM
  scripts/config --enable CONFIG_DRM_I915_TRACE_GTT
  scripts/config --enable CONFIG_DRM_I915_SW_FENCE_DEBUG_OBJECTS
  scripts/config --enable CONFIG_DRM_I915_SW_FENCE_CHECK_DAG
  scripts/config --enable CONFIG_DRM_I915_DEBUG_GUC
  scripts/config --enable CONFIG_DRM_I915_SELFTEST
  scripts/config --enable CONFIG_DRM_I915_SELFTEST_BROKEN
  scripts/config --enable CONFIG_DRM_I915_LOW_LEVEL_TRACEPOINTS
  scripts/config --enable CONFIG_DRM_I915_DEBUG_VBLANK_EVADE
  scripts/config --enable CONFIG_DRM_I915_DEBUG_RUNTIME_PM
  scripts/config --set-val CONFIG_DRM_I915_FENCE_TIMEOUT 10000
  scripts/config --set-val CONFIG_DRM_I915_USERFAULT_AUTOSUSPEND 250
  scripts/config --set-val CONFIG_DRM_I915_HEARTBEAT_INTERVAL 2500
  scripts/config --set-val CONFIG_DRM_I915_PREEMPT_TIMEOUT 640
  scripts/config --set-val CONFIG_DRM_I915_MAX_REQUEST_BUSYWAIT 8000
  scripts/config --set-val CONFIG_DRM_I915_STOP_TIMEOUT 100
  scripts/config --set-val CONFIG_DRM_I915_TIMESLICE_DURATION 1
  scripts/config --enable CONFIG_DRM_I915_UNSTABLE
  scripts/config --enable CONFIG_DRM_I915_UNSTABLE_FAKE_LMEM
  # Intel/GMA500
  scripts/config --enable CONFIG_DRM_GMA500
  scripts/config --enable CONFIG_DRM_GMA600
  scripts/config --enable CONFIG_DRM_GMA3600
  scripts/config --enable CONFIG_DRM_MEDFIELD
  # Nouveau
  echo "Enable full support for Nouveau GPU"
  scripts/config --module CONFIG_DRM_NOUVEAU
  scripts/config --enable CONFIG_NOUVEAU_LEGACY_CTX_SUPPORT
  scripts/config --enable CONFIG_NOUVEAU_PLATFORM_DRIVER
  scripts/config --set-val CONFIG_NOUVEAU_DEBUG 3
  scripts/config --set-val CONFIG_NOUVEAU_DEBUG_DEFAULT 3
  scripts/config --enable CONFIG_NOUVEAU_DEBUG_MMU
  scripts/config --enable CONFIG_NOUVEAU_DEBUG_PUSH
  scripts/config --enable CONFIG_DRM_NOUVEAU_BACKLIGHT
  scripts/config --enable CONFIG_DRM_NOUVEAU_SVM

  sleep 2s

  # Enable vbox/virtio/vkms/vmwgfx/xen
  msg2 "Enable vbox/virtio/vkms/vmwgfx/xen"
  # Vbox
  echo "Enable Vbox"
  scripts/config --module CONFIG_DRM_VBOXVIDEO
  # Virtio
  echo "Enable Virtio"
  scripts/config --module CONFIG_DRM_VIRTIO_GPU
  # Vmwgfx
  echo "Enable Vmwgfx"
  scripts/config --module CONFIG_DRM_VMWGFX
  scripts/config --enable CONFIG_DRM_VMWGFX_FBCON

  sleep 2s

  # Disable some leds features
  msg2 "Disable CONFIG_LEDS_RT8515"
  scripts/config --disable CONFIG_LEDS_RT8515

  sleep 2s

  # Filesystem
  msg2 "Disable some filesystem support... Because here we use ntfs/ntfs3,ext4,btrfs,exfat,fat,ramfs,proc"
  # Disable Affs (Amiga FFS file system support)
  echo "Disable AFFS (Amiga FFS file system support)"
  scripts/config --disable CONFIG_AFFS_FS
  # Disable ext2 support
  echo "Disable ext2 support"
  scripts/config --disable CONFIG_EXT2_FS
  scripts/config --disable CONFIG_EXT2_FS_XATTR
  scripts/config --disable CONFIG_EXT2_FS_POSIX_ACL
  scripts/config --disable CONFIG_EXT2_FS_SECURITY
  # Disable ext3 support
  echo "Disable ext3 support"
  scripts/config --disable CONFIG_EXT3_FS
  scripts/config --disable CONFIG_EXT3_FS_POSIX_ACL
  scripts/config --disable CONFIG_EXT3_FS_SECURITY

  sleep 2s

  # Fully support ext4
  msg2 "Enable ext4 support"
  scripts/config --enable CONFIG_EXT4_FS
  scripts/config --enable CONFIG_EXT4_USE_FOR_EXT2
  scripts/config --enable CONFIG_EXT4_FS_POSIX_ACL
  scripts/config --enable CONFIG_EXT4_FS_SECURITY

  sleep 2s

  # Disable Radio driver... This kernel is meant for gaming, programming and desktop stuff
  msg2 "Disable Radio driver... This kernel is meant for gaming, programming and desktop stuff"
  scripts/config --disable CONFIG_MEDIA_RADIO_SUPPORT
  scripts/config --disable CONFIG_RADIO_ADAPTERS
  scripts/config --disable CONFIG_RADIO_TEA575X
  scripts/config --disable CONFIG_RADIO_SI4713
  scripts/config --disable CONFIG_RADIO_SI476X
  scripts/config --disable CONFIG_USB_MR800
  scripts/config --disable CONFIG_USB_DSBR
  scripts/config --disable CONFIG_RADIO_MAXIRADIO
  scripts/config --disable CONFIG_RADIO_SHARK
  scripts/config --disable CONFIG_RADIO_SHARK2
  scripts/config --disable CONFIG_USB_KEENE
  scripts/config --disable CONFIG_USB_RAREMONO
  scripts/config --disable CONFIG_USB_MA901
  scripts/config --disable CONFIG_RADIO_TEA5764
  scripts/config --disable CONFIG_RADIO_TEA5764_XTAL
  scripts/config --disable CONFIG_RADIO_SAA7706H
  scripts/config --disable CONFIG_RADIO_TEF6862
  scripts/config --disable CONFIG_RADIO_TIMBERDALE
  scripts/config --disable CONFIG_RADIO_WL1273
  scripts/config --disable CONFIG_V4L_RADIO_ISA_DRIVERS
  scripts/config --disable CONFIG_RADIO_ISA
  scripts/config --disable CONFIG_RADIO_CADET
  scripts/config --disable CONFIG_RADIO_RTRACK
  scripts/config --disable CONFIG_RADIO_RTRACK_PORT
  scripts/config --disable CONFIG_RADIO_RTRACK2
  scripts/config --disable CONFIG_RADIO_RTRACK2_PORT
  scripts/config --disable CONFIG_RADIO_AZTECH
  scripts/config --disable CONFIG_RADIO_AZTECH_PORT
  scripts/config --disable CONFIG_RADIO_GEMTEK
  scripts/config --disable CONFIG_RADIO_GEMTEK_PORT
  scripts/config --disable CONFIG_RADIO_GEMTEK_PROBE
  scripts/config --disable CONFIG_RADIO_MIROPCM20
  scripts/config --disable CONFIG_RADIO_SF16FMI
  scripts/config --disable CONFIG_RADIO_SF16FMR2
  scripts/config --disable CONFIG_RADIO_TERRATEC
  scripts/config --disable CONFIG_RADIO_TRUST
  scripts/config --disable CONFIG_RADIO_TRUST_PORT
  scripts/config --disable CONFIG_RADIO_TYPHOON
  scripts/config --disable CONFIG_RADIO_TYPHOON_PORT
  scripts/config --disable CONFIG_RADIO_TYPHOON_MUTEFREQ
  scripts/config --disable CONFIG_RADIO_ZOLTRIX
  scripts/config --disable CONFIG_RADIO_ZOLTRIX_PORT
  scripts/config --disable CONFIG_RADIO_SI470X
  scripts/config --disable CONFIG_USB_SI470X
  scripts/config --disable CONFIG_I2C_SI470X
  scripts/config --disable CONFIG_USB_SI4713
  scripts/config --disable CONFIG_PLATFORM_SI4713
  scripts/config --disable CONFIG_I2C_SI4713
  scripts/config --disable CONFIG_RADIO_WL128X

  sleep 2s

  # Disable TV Tuners... This kernel is meant for gaming, programming and desktop stuff
  msg2 "Disable TV Tuners... This kernel is meant for gaming, programming and desktop stuff"
  scripts/config --disable CONFIG_MEDIA_DIGITAL_TV_SUPPORT
  scripts/config --disable CONFIG_MEDIA_TUNER
  scripts/config --disable CONFIG_MEDIA_TUNER_SIMPLE
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA18250
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA8290
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA827X
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA18271
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA9887
  scripts/config --disable CONFIG_MEDIA_TUNER_TEA5761
  scripts/config --disable CONFIG_MEDIA_TUNER_TEA5767
  scripts/config --disable CONFIG_MEDIA_TUNER_MSI001
  scripts/config --disable CONFIG_MEDIA_TUNER_MT20XX
  scripts/config --disable CONFIG_MEDIA_TUNER_MT2060
  scripts/config --disable CONFIG_MEDIA_TUNER_MT2063
  scripts/config --disable CONFIG_MEDIA_TUNER_MT2266
  scripts/config --disable CONFIG_MEDIA_TUNER_MT2131
  scripts/config --disable CONFIG_MEDIA_TUNER_QT1010
  scripts/config --disable CONFIG_MEDIA_TUNER_XC2028
  scripts/config --disable CONFIG_MEDIA_TUNER_XC5000
  scripts/config --disable CONFIG_MEDIA_TUNER_XC4000
  scripts/config --disable CONFIG_MEDIA_TUNER_MXL5005S
  scripts/config --disable CONFIG_MEDIA_TUNER_MXL5007T
  scripts/config --disable CONFIG_MEDIA_TUNER_MC44S803
  scripts/config --disable CONFIG_MEDIA_TUNER_MAX2165
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA18218
  scripts/config --disable CONFIG_MEDIA_TUNER_FC0011
  scripts/config --disable CONFIG_MEDIA_TUNER_FC0012
  scripts/config --disable CONFIG_MEDIA_TUNER_FC0013
  scripts/config --disable CONFIG_MEDIA_TUNER_TDA18212
  scripts/config --disable CONFIG_MEDIA_TUNER_E4000
  scripts/config --disable CONFIG_MEDIA_TUNER_FC2580
  scripts/config --disable CONFIG_MEDIA_TUNER_M88RS6000T
  scripts/config --disable CONFIG_MEDIA_TUNER_TUA9001
  scripts/config --disable CONFIG_MEDIA_TUNER_SI2157
  scripts/config --disable CONFIG_MEDIA_TUNER_IT913X
  scripts/config --disable CONFIG_MEDIA_TUNER_R820T
  scripts/config --disable CONFIG_MEDIA_TUNER_MXL301RF
  scripts/config --disable CONFIG_MEDIA_TUNER_QM1D1C0042
  scripts/config --disable CONFIG_MEDIA_TUNER_QM1D1B0004

  sleep 2s

  # Disable Apple drivers
  msg2 "Disable Apple drivers... Please dont buy apple stuff!.."
  scripts/config --disable CONFIG_HID_APPLE
  scripts/config --disable CONFIG_HID_APPLEIR
  scripts/config --disable CONFIG_MACINTOSH_DRIVERS
  scripts/config --disable CONFIG_ADB
  scripts/config --disable CONFIG_ADB_MACII
  scripts/config --disable CONFIG_ADB_IOP
  scripts/config --disable CONFIG_ADB_CUDA
  scripts/config --disable CONFIG_ADB_PMU
  scripts/config --disable CONFIG_ADB_PMU_LED
  scripts/config --disable CONFIG_ADB_PMU_LED_DISK
  scripts/config --disable CONFIG_PMAC_SMU
  scripts/config --disable CONFIG_PMAC_APM_EMU
  scripts/config --disable CONFIG_PMAC_MEDIABAY
  scripts/config --disable CONFIG_PMAC_BACKLIGHT
  scripts/config --disable CONFIG_PMAC_BACKLIGHT_LEGACY
  scripts/config --disable CONFIG_ADB_MACIO
  scripts/config --disable CONFIG_INPUT_ADBHID
  scripts/config --disable CONFIG_MAC_EMUMOUSEBTN
  scripts/config --disable CONFIG_THERM_WINDTUNNEL
  scripts/config --disable CONFIG_THERM_ADT746X
  scripts/config --disable CONFIG_WINDFARM
  scripts/config --disable CONFIG_WINDFARM_PM81
  scripts/config --disable CONFIG_WINDFARM_PM72
  scripts/config --disable CONFIG_WINDFARM_RM31
  scripts/config --disable CONFIG_WINDFARM_PM91
  scripts/config --disable CONFIG_WINDFARM_PM112
  scripts/config --disable CONFIG_WINDFARM_PM121
  scripts/config --disable CONFIG_ANSLCD
  scripts/config --disable CONFIG_PMAC_RACKMETER
  scripts/config --disable CONFIG_SENSORS_AMS
  scripts/config --disable CONFIG_SENSORS_AMS_PMU
  scripts/config --disable CONFIG_SENSORS_AMS_I2C

  sleep 2s

  # Disable CONFIG_DEBUG_INFO=y at build time otherwise memory usage blows up
  # and can easily overwhelm a system with 32 GB of memory using a tmpfs build
  # "partition ... this was introduced by FS#66260, see
  # "https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/linux&id=663b08666b269eeeeaafbafaee07fd03389ac8d7
  msg2 "Disable debbug options"
  scripts/config --disable CONFIG_SLUB_DEBUG
  scripts/config --disable CONFIG_PM_DEBUG
  scripts/config --disable CONFIG_PM_ADVANCED_DEBUG
  scripts/config --disable CONFIG_PM_SLEEP_DEBUG
  scripts/config --disable CONFIG_ACPI_DEBUG
  scripts/config --disable CONFIG_SCHED_DEBUG
  scripts/config --disable CONFIG_LATENCYTOP
  scripts/config --disable CONFIG_DEBUG_PREEMPT
  scripts/config --disable CONFIG_DEBUG_INFO
  scripts/config --disable CONFIG_CGROUP_BPF
  scripts/config --disable CONFIG_BPF_LSM
  scripts/config --disable CONFIG_BPF_PRELOAD
  scripts/config --disable CONFIG_BPF_LIRC_MODE2
  scripts/config --disable CONFIG_BPF_KPROBE_OVERRIDE
  scripts/config --disable CONFIG_DEBUG_INFO_REDUCED
  scripts/config --disable CONFIG_DEBUG_INFO_COMPRESSED
  scripts/config --disable CONFIG_DEBUG_INFO_SPLI
  scripts/config --disable CONFIG_GDB_SCRIPTS
  scripts/config --disable CONFIG_DEBUG_INFO_DWARF4
  scripts/config --disable CONFIG_DEBUG_INFO_BTF
  scripts/config --disable CONFIG_BPF_PRELOAD
  scripts/config --disable CONFIG_BPF_PRELOAD_UMD
  scripts/config --disable CONFIG_BPF_STREAM_PARSER
  scripts/config --disable CONFIG_DMA_API_DEBUG
  scripts/config --disable CONFIG_DMA_API_DEBUG_SG
  scripts/config --disable CONFIG_DMA_MAP_BENCHMARK
  scripts/config --disable CONFIG_DEBUG_FS
  scripts/config --disable CONFIG_GCOV_KERNEL
  scripts/config --disable CONFIG_GCOV_PROFILE_ALL
  scripts/config --disable CONFIG_DEBUG_FS
  scripts/config --disable CONFIG_GENERIC_IRQ_DEBUGFS
  scripts/config --disable CONFIG_ACPI_DEBUGGER
  scripts/config --disable CONFIG_ACPI_DEBUGGER_USER
  scripts/config --disable CONFIG_ACPI_EC_DEBUGFS
  scripts/config --disable CONFIG_ACPI_APEI_ERST_DEBUG
  scripts/config --disable CONFIG_NFIT_SECURITY_DEBUG
  scripts/config --disable CONFIG_DMADEVICES_DEBUG
  scripts/config --disable CONFIG_DMADEVICES_VDEBUG
  scripts/config --disable CONFIG_DMATEST
  scripts/config --disable CONFIG_BTRFS_DEBUG
  scripts/config --disable CONFIG_BTRFS_FS_REF_VERIFY
  scripts/config --disable CONFIG_BTRFS_ASSERT
  scripts/config --disable CONFIG_BTRFS_FS_RUN_SANITY_TESTS
  scripts/config --disable CONFIG_BTRFS_FS_CHECK_INTEGRITY
  scripts/config --disable CONFIG_EXT4_DEBUG
  scripts/config --disable CONFIG_EXT4_KUNIT_TESTS
  scripts/config --disable CONFIG_SECURITY_APPARMOR_DEBUG
  scripts/config --disable CONFIG_SECURITY_APPARMOR_DEBUG_ASSERTS
  scripts/config --disable CONFIG_SECURITY_APPARMOR_DEBUG_MESSAGES
  scripts/config --disable CONFIG_SECURITY_APPARMOR_KUNIT_TEST
  scripts/config --disable CONFIG_POWER_SUPPLY_DEBUG
  scripts/config --disable CONFIG_NTFS_DEBUG
  scripts/config --disable CONFIG_GENERIC_IRQ_DEBUGFS

  sleep 2s

  if [[ "$_cpu_sched" = "1" ]]; then
    # https://bbs.archlinux.org/viewtopic.php?pid=1824594#p1824594
    msg2 "Enable CONFIG_PSI_DEFAULT_DISABLED"
    scripts/config --enable CONFIG_PSI_DEFAULT_DISABLED
    # FS#66613
    # https://bugzilla.kernel.org/show_bug.cgi?id=207173#c6
    msg2 "Disable CONFIG_KVM_WERROR"
    scripts/config --disable CONFIG_KVM_WERROR

    sleep 2s
  fi
}

cpu_arch(){
  plain ""
  plain "#########################################"
  plain "Set cpu microarchitecture optimization in GCC"
  read -rp "`echo $' > 0) Generic(default)\n \
  > 1) AMD K6/K6-II/K6-III\n \
  > 2) AMD Athlon/Duron/K7\n \
  > 3) AMD Opteron/Athlon64/Hammer/K8\n \
  > 4) AMD Opteron/Athlon64/Hammer/K8 with SSE3\n \
  > 5) AMD 61xx/7x50/PhenomX3/X4/II/K10\n \
  > 6) AMD Family 10h (Barcelona)\n \
  > 7) AMD Family 14h (Bobcat)\n \
  > 8) AMD Family 16h (Jaguar)\n \
  > 9) AMD Family 15h (Bulldozer)\n \
  > 10) AMD Family 15h (Piledriver)\n \
  > 11) AMD Family 15h (Steamroller)\n \
  > 12) AMD Family 15h (Excavator)\n \
  > 13) AMD Family 17h (Zen)\n \
  > 14) AMD Family 17h (Zen 2)\n \
  > 15) Transmeta Crusoe\n \
  > 16) Transmeta Efficeon\n \
  > 17) IDT Winchip C6\n \
  > 18) Winchip-2/Winchip-2A/Winchip-3\n \
  > 19) AMD Elan\n \
  > 20) Geode GX1 (Cyrix MediaGX)\n \
  > 21) AMD Geode GX and LX\n \
  > 22) Cyrix III or C3\n \
  > 23) VIA C3 "Nehemiah"\n \
  > 24) VIA C7\n \
  > 25) Intel Pentium 4, Pentium D and older Nocona/Dempsey Xeon CPUs with Intel 64bit\n \
  > 26) Intel Atom\n \
  > 27) Intel Core 2 and newer Core 2 Xeons (Xeon 51xx and 53xx)\n \
  > 28) Intel 1st Gen Core i3/i5/i7-family (Nehalem)\n \
  > 29) Intel 1.5 Gen Core i3/i5/i7-family (Westmere)\n \
  > 30) Intel Silvermont\n \
  > 31) Intel Goldmont (Apollo Lake and Denverton)\n \
  > 32) Intel Goldmont Plus (Gemini Lake)\n \
  > 33) Intel 2nd Gen Core i3/i5/i7-family (Sandybridge)\n \
  > 34) Intel 3rd Gen Core i3/i5/i7-family (Ivybridge)\n \
  > 35) Intel 4th Gen Core i3/i5/i7-family (Haswell)\n \
  > 36) Intel 5th Gen Core i3/i5/i7-family (Broadwell)\n \
  > 37) Intel 6th Gen Core i3/i5/i7-family (Skylake)\n \
  > 38) Intel 6th Gen Core i7/i9-family (Skylake X)\n \
  > 39) Intel 8th Gen Core i3/i5/i7-family (Cannon Lake)\n \
  > 40) Intel 8th Gen Core i7/i9-family (Ice Lake)\n \
  > 41) Xeon processors in the Cascade Lake family\n \
  > 42) Native optimizations autodetected by GCC\nchoice[0-42]: '`" _microarchitecture

  plain ""

  sleep 2
}
